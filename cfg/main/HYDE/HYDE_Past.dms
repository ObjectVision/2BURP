////////////////////////////////////////////////////////////////////////////////////////////
//            (C) Configuration Towards an Urban Preview - 2UP september 2021             //
//         Netherlands Environmental Assessment Agency http://www.pbl.nl/en/contact       //
//  This work is licensed under a Creative Commons Attribution 4.0 International License  //
//              CC BY-SA 4.0 https://creativecommons.org/licenses/by-sa/4.0/              //
////////////////////////////////////////////////////////////////////////////////////////////

// Author:   Bas van Bemmel
// Function:

//---------Input Urban Population Density (km2) over time---------------------------//
container HYDEPast
{
	container Import
	{
		unit<uint32> SSPPast
			: StorageName = "%projdir%/data/HYDE_PAST/HYDE_SSP2_popdens_1990_2015_INDEX1.csv"
			, StorageType = "gdal.vect"
			, StorageReadonly = "True"
			, DialogType  = "Map"
			, DialogData  = "PolyData"
		{
			attribute<Input/administrative/Countries/Country > Country_rel := rlookup(Region, Input/administrative/Countries/Country/ISO3);
			attribute<Input/LatLong> PolyData (polygon) := Input/administrative/Countries/Country/Geometry[ Country_rel ];
			attribute<string> Label := Region;

			parameter<string> Name := 'SSPPast';
		}
	}


//  Function to calculate total and additional urban area for the projection dates (HYDE index) based on the HYDE average urban density figures.
	container HYDEindex
	{
		unit<uint8> SSP: nrofrows = 1
		{
			attribute<string>  Name: ['SSPPast'];
			attribute<string>  Label := Name;
			container V := for_each_nedv(Name, 'value('+string(ID(.))+',..)', void, .);
		}

		container SSPs := 
			for_each_ne(SSP/Name, 
				'HYDEscenarios(Import/'+SSP/Name+')'
				);

		template HYDEscenarios
		{

			container HYDEclaim;

			parameter<string> Scenario:= HYDEclaim/Name;
			
			parameter<string> PopulationInput := Input/Method;

			unit<uint8> ProjectionDate: nrofrows = 3
			{
				attribute<Year> Yr: [1990, 2000, 2015];
				attribute<string> name := 'Y'+string(Yr);
			}

			container Start {
				container NewState
				{
					attribute<km2> UrbanArea (Input/administrative/Countries/Country ) := Input/Population/M1/Urban_pop_2010/UrbanArea;
				}
			}

			container Indices :=
				for_each_nedv(ProjectionDate/name,
					replace(
							'Import/@SSP@/_@YR@[float32][invert(Import/@SSP@/Country_rel)] '
								'/ Import/@SSP@/_1990[float32][invert(Import/@SSP@/Country_rel)]'
					,	'@SSP@', Scenario
					,	'@YR@', string(ProjectionDate/Yr)
					)
				,	Input/administrative/Countries/Country , float32
				);

			container Evaluation
			{
				attribute<km2> Diff_2015_1990 (Input/administrative/Countries/Country ) := ProjectionDates/Y2015 - ProjectionDates/Y1990;
			}
		}
	}
}