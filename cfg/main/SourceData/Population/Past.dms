container Past : using = "units;geography;classifications;sourcedata/regionalunits"
{
	container PerYear := 
		for_each_ne(
			GHS_years/name
			, 'Population_T('+string(GHS_years/year)+'w)'
		);
	
	unit<ipoint> Big_raster_domain
	:	StorageName     = "%ToBURPDataDir%/population/GHS_POP_E1975_GLOBE_R2023A_54009_1000_V1_0.tif"
	,	StorageReadOnly = "True"
	,	DialogData      = "WorldMollweide"
	{
		attribute<Countries> country_rel := poly2grid(Countries/geometry_MW, .);
	}

	template Population_T
	{
		parameter<uint16> Year;
		///
		parameter<string> FileName          := '%ToBURPDataDir%/population/GHS_POP_E'+string(Year)+'_GLOBE_R2023A_54009_1000_V1_0';

		unit<ipoint> big_raster := mollweide_grid
		,	StorageName     = "= FileName+'.tif'"
		,	StorageReadOnly = "True"
		,	DialogData      = "WorldMollweide"
		, 	LazyCalculated  = "true"
		{ 
			attribute<float64> GridData;                                                            // don't read this; memory will explode
			attribute<float64> GridData_wo_NoData               := GridData > 0d ? GridData : 0d; 
			parameter<float64> Sum_pop                          := sum(GridData_wo_NoData);
			// attribute<float64> ReadData (mollweide_grid);                                     // read study area grid, for testing purposes
			
			// attribute<float64> Population_InUrbanThreshold      := ='BuiltUpPresence_R2023_Create/Y'+string(year)+'/big_raster/IsAboveThreshold ? GridData_wo_NoData : 0d';
		}
		
		attribute<float32> Population_MW (Mollweide_grid) := big_raster/GridData_wo_NoData[float32];
		attribute<float32> Population_LL (domain)         := sum_float32(Population_MW, invert(domain/mollweide_rel));
		
		// attribute<float64>      Population       (Countries)          := sum(big_raster/GridData_wo_NoData, Big_raster_domain/Country_rel);
		// attribute<float64>      Urban_Population (Countries)          := sum(big_raster/Population_InUrbanThreshold, Big_raster_domain/Country_rel);
	}
}
