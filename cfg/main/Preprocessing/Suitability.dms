container Suitability : using = "Units"
{
	container TRI
	{
		unit<uint32> Class
		:	StorageName     = "%projdir%/data/Suitability/TRI.csv"
		,	StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		{
			attribute<Float32> RelOccurence := Float32(Probability), IntegrityCheck = "!IsDefined(strpos(Probability, ','))";
			attribute<string>  name         := 'TRI'+string(TRI);
			
			container V := for_each_nedv(name, 'value('+string(ID(.))+',..)', void, .);
		}

		container Data := for_each_nedv(Class/name, 'SourceData/Physical/TerrainRoughnessIndex/'+Class/name+'/ReadData', domain, uint8);
		// attribute<TRIweight> Weight(domain) := ='add('+AsItemList('Float32(Data/'+Class/name+') * Class/RelOccurence[Class/V/'+Class/Name+']')+')';
	}

	container DistanceBuildUp
	{
		unit<uint32> Class
		:  	StorageName = "%projdir%/data/Suitability/DistanceUrbanArea.csv"
		,   StorageType = "gdal.vect";
	}

	container TravelTime
	{
		unit<uint8> Class
		:  	StorageName     = "%projdir%/data/Suitability/TravelTime.csv"
		,   StorageType     = "gdal.vect"
		,	StorageReadOnly = "True"
		{
			attribute<Float32> RelOccurence := Float32(Probability), IntegrityCheck = "!IsDefined(strpos(Probability, ','))";
		}
	
		attribute<float32> Weight (domain) := MakeDefined(lookup(SourceData/Socioeconomic/TravelTime/TravelTimeGRIP/ReadData, Class/RelOccurence), 0.0f);
	}
	
	container Distance_UrbanArea1990
	{
		attribute<float32> UrbanPot (domain) :
		= potential(float32(/Preprocessing/urban/BuiltUpBoolJRC_50prc/Y1990), Geography/Distmatrices/Impl/pot10km/potrange/RelWeightCorr);
	}

	container Distance_UrbanArea2010
	{
		attribute<float32> UrbanPot (domain) :
		= potential(float32(Preprocessing/UrbanArea/UrbanArea2010/ReadData), Geography/Distmatrices/Impl/pot10km/potrange/RelWeightCorr);
	}

	container Coast
	{
		attribute<Bool> InRegion (domain): = IsDefined(SourceData/RegionalUnits/Countries/ClaimCountry_grid);

		attribute<float32> buffer_25km (domain):
			= !InRegion ? 0f : potential(float32(SourceData/Physical/Coast/Coastline/ReadData), float32(Geography/Distmatrices/Impl/pot25km/potrange/buffer));

		attribute<bool> Zone (domain) := buffer_25km > 0f;
		
		container Potential
		{
			attribute<float32> pot_UrbanArea_5km (domain):
			= !InRegion ? 0f : potential(float32(Preprocessing/UrbanArea/UrbanArea2010/ReadData), Geography/Distmatrices/Impl/pot5km/potrange/RelWeightSqrt)
			,cdf = "classifications/Input/Suitability/CoastPotClass/ClassBreak";

			attribute<float32> pot_CoastLine_20km (domain) :=
			!InRegion ? 0f : potential(float32(SourceData/Physical/Coast/Coastline/ReadData), Geography/Distmatrices/Impl/pot20km/potrange/RelWeightSqrt)
			,	cdf = "classifications/Input/Suitability/CoastPotClass/ClassBreak";

			attribute<float32> UrbanCoastPot (domain):
			= (pot_CoastLine_20km * pot_UrbanArea_5km) * 100f;

			//rescaled version
			attribute<float32> combination_UrbanCoast (domain):
			= rescale((pot_CoastLine_20km * pot_UrbanArea_5km) * 100f, 0.0f, 100f);
		}
		
	}
}
