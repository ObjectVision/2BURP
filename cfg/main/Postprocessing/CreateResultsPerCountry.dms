////////////////////////////////////////////////////////////////////////////////////////////
//            (C) Configuration Towards an Urban Preview - 2UP 2021                       //
//         Netherlands Environmental Assessment Agency http://www.pbl.nl/en/contact       //
//  This work is licensed under a Creative Commons Attribution 4.0 International License  //
//              CC BY-SA 4.0 https://creativecommons.org/licenses/by-sa/4.0/              //
////////////////////////////////////////////////////////////////////////////////////////////

// Author:   Bas van Bemmel
// Function: Create tif-files for each countries for variables
// Remark:   Could long time to fold out (7.239)

container CreateResultsPerCountry: Using = "Units;"
{
	container all
	{
	parameter<string> InputMethod    : = 'M3';
	parameter<string> Variant        := 'var1'; // Only relevant for M3, var1=JRC 50 percent bua, var2=GHSMOD/ Leave empty when working with M_1
	parameter<string> InPresentUrban := ''; //growth only inside present urban contour: InPresentUrban, otherwise Leave empty

	container Per_Country_grid:= for_each_nednv(
		SourceData/RegionalUnits/Countries/Country/Name_from_utf_cor,
			replace(
				'poly2grid(Claims/Scenario/M1/SSP2/FileData/PolyData, ReadResultsPerCountry/all/Countries/@nr1@/gtopoc/gtopo_country)'
				,'@nr1@', SourceData/RegionalUnits/Countries/Country/Name_from_utf_cor
				)
		,ReadResultsPerCountry
		,	replace(
				'ReadResultsPerCountry/all/Countries/@nr1@/gtopoc/gtopo_country'
				,'@nr1@', SourceData/RegionalUnits/Countries/Country/Name_from_utf_cor
				)
		,Claims/Scenario/M1/SSP2/FileData
		);

	container Per_Country_grid_bool := for_each_nednv(
		SourceData/RegionalUnits/Countries/Country/Name_from_utf_cor,
			replace(
				'(Per_Country_grid/@nr1@==@nr2@[uint32]) ? 1.0f : (0/0)[float32]'
				,'@nr1@', SourceData/RegionalUnits/Countries/Country/Name_from_utf_cor
				,'@nr2@', string(SourceData/RegionalUnits/Countries/Country/claimnumber)
				)
		,ReadResultsPerCountry
		,	replace(
				'ReadResultsPerCountry/all/Countries/@nr3@/gtopoc/gtopo_country'
				,'@nr3@', SourceData/RegionalUnits/Countries/Country/Name_from_utf_cor
				)
		,float32
		);

	container Unitsclip: Using = "Units;"
	{
		unit<float32> upop                      :=Person;
		unit<float32> rpop                      :=Person;
		unit<float32> tpop                      :=Person;
		unit<uint8>   Pop_Classification        :=Classifications/PopClass;
		unit<float32> popd                      :=Person_km2;
		unit<uint8>   PopDensity_Classification :=Classifications/PopClass;
		unit<uint8>   Urb                       :=Classifications/Urb/IsUrbClass;
		unit<uint8>   IsUrban_Classification    :=Classifications/Urb/IsUrbClassSea;
		unit<uint32>  UrbCountry                :=uint32;
		unit<float32> buakm2                    :=km2;
		unit<float32> bua                       :=BuiltupareaFactor;
		unit<uint8>   smod                      :=Classifications/Settlement_Model_L2_nomenclature_export;
	}

	unit<uint8> calcmaps : nrofrows = 12
	{
		attribute<string> name        : ['upop', 'rpop', 'tpop','Pop_Classification', 'popd','PopDensity_Classification',      'Urb','IsUrban_Classification', 'UrbCountry', 'buakm2', 'bua',     'smod'];
		attribute<string> unityvar    : [''    ,     '',     '',         '[float32]',     '',                '[float32]','[float32]',             '[float32]',  '[float32]',       '',    '','[float32]'];
		attribute<string> orgunityvar : [''    ,     '',     '',           '[uint8]',     '',                  '[uint8]',  '[uint8]',               '[uint8]',   '[uint32]',       '',    '',  '[uint8]'];
	}

		unit<uint32> var_ssp_year := combine(/SourceData/RegionalUnits/Countries/Country ,calcmaps, ReadResults/SSP_Year)
		{
			attribute<string> country_name         := SourceData/RegionalUnits/Countries/Country/Name_from_utf_cor[nr_1];
			attribute<string> calcmaps_name        := calcmaps/name[nr_2];
			attribute<string> calcmaps_unityvar    := calcmaps/unityvar[nr_2];
			attribute<string> calcmaps_orgunityvar := calcmaps/orgunityvar[nr_2];
			attribute<string> SSP_Year_name        := ReadResults/SSP_Year/name[nr_3];
			attribute<string> concat1              := calcmaps_name + '/' + SSP_Year_name;
			attribute<string> concat               := country_name + '/' + calcmaps_name + '/' + SSP_Year_name;
		}

	container clip: =
		for_each_nednvna(
			   var_ssp_year/concat
			,replace(
				'(ReadResultsPerCountry/all/Countries/@nr2@/Country/@nr1@@nr3@ * Per_Country_grid_bool/@nr2@[float32])@nr4@'
				,'@nr1@', string(var_ssp_year/concat1)
				,'@nr2@', string(var_ssp_year/country_name)
				,'@nr3@', string(var_ssp_year/calcmaps_unityvar)
				,'@nr4@', string(var_ssp_year/calcmaps_orgunityvar)
				)
			, ReadResultsPerCountry
			, 'ReadResultsPerCountry/all/Countries/' + var_ssp_year/country_name + '/gtopoc/gtopo_country'
			, Unitsclip
			, var_ssp_year/calcmaps_name
			,'%LocalDataProjDir%/results_clip/'+CreateResultsPerCountry/all/var_ssp_year/country_name+'/'+InputMethod+Variant+InPresentUrban+'_' + var_ssp_year/SSP_Year_name  +'_'+ /Postprocessing/Scenarios/CreateResultsPerCountry/all/var_ssp_year/calcmaps_name + '.tif'
		);
		
		
	container UnitsclipGDP: Using = "Units;"
	{
		unit<float32> gdp_cell                  :=float32;
		unit<float32> gdp_cell_national         :=float32;
	}
	
	unit<uint8> calcmapsGDP : nrofrows = 2
	{
		attribute<string> name        : ['gdp_cell', 'gdp_cell_national'];
		attribute<string> unityvar    : ['',                  ''];
		attribute<string> orgunityvar : ['',                  ''];
	}
	

		unit<uint32> var_ssp_yearGDP := combine(/SourceData/RegionalUnits/Countries/Country ,calcmapsGDP, ReadResults/SSP_Year)
		{
			attribute<string> country_name         := SourceData/RegionalUnits/Countries/Country/Name_from_utf_cor[nr_1];
			attribute<string> calcmaps_name        := calcmapsGDP/name[nr_2];
			attribute<string> calcmaps_unityvar    := calcmapsGDP/unityvar[nr_2];
			attribute<string> calcmaps_orgunityvar := calcmapsGDP/orgunityvar[nr_2];
			attribute<string> SSP_Year_name        := ReadResults/SSP_Year/name[nr_3];
			attribute<string> concat1              := calcmaps_name + '/' + SSP_Year_name;
			attribute<string> concat               := country_name + '/' + calcmaps_name + '/' + SSP_Year_name;
		}
	
	container clipGDP: =
		for_each_nednvna(
			   var_ssp_yearGDP/concat
			,replace(
				'(ReadResultsPerCountry/all/Countries/@nr2@/CountryGDP/@nr1@@nr3@ * Per_Country_grid_bool/@nr2@[float32])@nr4@'
				,'@nr1@', string(var_ssp_yearGDP/concat1)
				,'@nr2@', string(var_ssp_yearGDP/country_name)
				,'@nr3@', string(var_ssp_yearGDP/calcmaps_unityvar)
				,'@nr4@', string(var_ssp_yearGDP/calcmaps_orgunityvar)
				)
			, ReadResultsPerCountry
			, 'ReadResultsPerCountry/all/Countries/' + var_ssp_yearGDP/country_name + '/gtopoc/gtopo_country'
			, UnitsclipGDP
			, var_ssp_yearGDP/calcmaps_name
			,'%LocalDataProjDir%/results_clip/'+CreateResultsPerCountry/all/var_ssp_yearGDP/country_name+'/'+InputMethod+Variant+InPresentUrban+'_' + var_ssp_yearGDP/SSP_Year_name  +'_'+ /Postprocessing/Scenarios/CreateResultsPerCountry/all/var_ssp_yearGDP/calcmaps_name + '.tif'
		);
	
	}
}