////////////////////////////////////////////////////////////////////////////////////////////
//            (C) Configuration Towards an Urban Preview - 2UP 2021                       //
//         Netherlands Environmental Assessment Agency http://www.pbl.nl/en/contact       //
//  This work is licensed under a Creative Commons Attribution 4.0 International License  //
//              CC BY-SA 4.0 https://creativecommons.org/licenses/by-sa/4.0/              //
////////////////////////////////////////////////////////////////////////////////////////////

// Author:   Bas van Bemmel
// Function: General to compare some export files with other settings. Only for NLD. Use SSP2 2080 as a kind of default
// PD 7387 TowardsAnUrbanPreview
// SD 7369 2UP
// GeoDMS 7.308 PP1,PP2
// use LatLong_Netherlands_narrow and NLD
// /Scenarios/SSPs/SSP2/ProjectionDates/Y2080/NewState/Pop
// /Scenarios/SSPs/SSP2/ProjectionDates/Y2080/NewState/IsUrban

// result urban see /Sandbox/%Effect%/Urban/%file%i/urbcombine/UnionData_copy
// result population see /Sandbox/%Effect%/Pop/%file%/Dif_excl_0

container Sandbox
{
	template combineT
	{
		// template parameters
		attribute<bool> first(input/gtopo);
		attribute<bool> second(input/gtopo);
		// end case parameters

		unit<uint8> OverlayRegios: nrofrows = 2
		{
			attribute<string> names: ['firstname', 'secondname'];
		}

		container OverlayGrids
		{
			attribute<uint8> firstname     (input/gtopo)      := first[uint8];
			attribute<uint8> secondname    (input/gtopo)      := second[uint8];
		}
	
		unit<uint32> urbcombine:= overlay32(OverlayRegios/names, input/gtopo, OverlayGrids)
		{
			attribute<uint32>                              ID                               := ID(.);
			attribute</Classifications/UrbanOverlayClass>  UnionData_copy(input/gtopo)      := UnionData[Classifications/UrbanOverlayClass];
		}
	}
	
	template combine3T
	{
		// template parameters
		attribute<bool> first(input/gtopo);
		attribute<bool> second(input/gtopo);
		attribute<bool> thirth(input/gtopo);
		// end case parameters

		unit<uint8> OverlayRegios: nrofrows = 3
		{
			attribute<string> names: ['firstname', 'secondname', 'thirthname'];
		}

		container OverlayGrids
		{
			attribute<uint8> firstname     (input/gtopo)      := first[uint8];
			attribute<uint8> secondname    (input/gtopo)      := second[uint8];
			attribute<uint8> thirthname    (input/gtopo)      := thirth[uint8];
		}
	
		unit<uint32> urbcombine:= overlay32(OverlayRegios/names, input/gtopo, OverlayGrids)
		{
			attribute<uint32>                               ID                          := ID(.);
			attribute</Classifications/Urban3OverlayClass>  UnionData_copy(input/gtopo) := UnionData[Classifications/Urban3OverlayClass];
		}
	}
	
	template DifT
	{
		// template parameters
		attribute<float32> first(input/gtopo);
		attribute<float32> second(input/gtopo);
		// end case parameters

		attribute<float32>  Dif(input/gtopo)           := first - second;
		attribute<float32>  Dif_excl_0(input/gtopo)    := Dif<>0f ? Dif : 0f/0f;
		attribute<bool>     Pos(input/gtopo)           := Dif > 0f;
		attribute<bool>     Neg(input/gtopo)           := Dif < 0f;
		attribute<float32>  PrcDif(input/gtopo)        := (Dif / first) * 100f;
		attribute<float32>  PrcDif_excl_0(input/gtopo) := PrcDif<>0f ? Dif : 0f/0f;
		
		attribute<bool>     PrcDif_outliers(input/gtopo) := PrcDif_excl_0 > 100f || PrcDif_excl_0 < -100f;
		
		unit<uint8> class : nrofrows = 8; 
		attribute<float32>  DifEcClass (class)  := ClassifyEqualCount(Dif, class);
		attribute<float32>  DifEc (input/gtopo) := classify(Dif, DifEcClass)[float32];
	}

	container MethodEffect
	{
		container Urban
		{
			unit<uint8> UrbanFile: nrofrows = 5
			{
				attribute<string> filename :[
										'IsUrban_SSP2_2080_NLD_M1_7308_PD7387_SD7369',
										'IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369',
										'IsUrban_SSP2_2080_NLD_M3var2_7308_PD7387_SD7369',
										'IsUrban_SSP2_2080_NLD_M1var1InPresentUrban_7308_PD7387_SD7369',
										'IsUrban_SSP2_2080_NLD_M3var1InPresentUrban_7308_PD7387_SD7369'
										];
			}
	
			container Urb: =
				for_each_ndvda(
					 UrbanFile/filename
					, input/gtopo
					, bool
					, 'urban'
					, '%MondiaalDataDir%/Sandbox/MethodEffect/' + UrbanFile/filename+'.tif'
				);
				
			container M1_vs_M3var1     := combineT(Sandbox/MethodEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M1_7308_PD7387_SD7369,     Sandbox/MethodEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369);
			container M1_vs_M3var2     := combineT(Sandbox/MethodEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M1_7308_PD7387_SD7369,     Sandbox/MethodEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var2_7308_PD7387_SD7369);
			container M3var1_vs_M3var2 := combineT(Sandbox/MethodEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369, Sandbox/MethodEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var2_7308_PD7387_SD7369);

			container M1var1InPresentUrban_vs_M3var1InPresentUrban := combineT(Sandbox/MethodEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M1var1InPresentUrban_7308_PD7387_SD7369,Sandbox/MethodEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1InPresentUrban_7308_PD7387_SD7369);
		}
		
		container Pop
		{
			unit<uint8> PopFile: nrofrows = 5
			{
				attribute<string> filename :[
										'Pop_SSP2_2080_NLD_M1_7308_PD7387_SD7369',
										'Pop_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369',
										'Pop_SSP2_2080_NLD_M3var2_7308_PD7387_SD7369',
										'Pop_SSP2_2080_NLD_M1var1InPresentUrban_7308_PD7387_SD7369',
										'Pop_SSP2_2080_NLD_M3var1InPresentUrban_7308_PD7387_SD7369'
										];
			}
				
			container Pop: =
				for_each_ndvda(
					 PopFile/filename
					, input/gtopo
					, Units/Person
					, 'total population'
					, '%MondiaalDataDir%/Sandbox/MethodEffect/' + PopFile/filename+'.tif'
				);
				
			container M1_vs_M3var1     := DifT(Sandbox/MethodEffect/Pop/Pop/Pop_SSP2_2080_NLD_M1_7308_PD7387_SD7369,     Sandbox/MethodEffect/Pop/Pop/Pop_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369);
			container M1_vs_M3var2     := DifT(Sandbox/MethodEffect/Pop/Pop/Pop_SSP2_2080_NLD_M1_7308_PD7387_SD7369,     Sandbox/MethodEffect/Pop/Pop/Pop_SSP2_2080_NLD_M3var2_7308_PD7387_SD7369);
			container M3var1_vs_M3var2 := DifT(Sandbox/MethodEffect/Pop/Pop/Pop_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369, Sandbox/MethodEffect/Pop/Pop/Pop_SSP2_2080_NLD_M3var2_7308_PD7387_SD7369);

			container M1var1InPresentUrban_vs_M3var1InPresentUrban := DifT(Sandbox/MethodEffect/Pop/Pop/Pop_SSP2_2080_NLD_M1var1InPresentUrban_7308_PD7387_SD7369,Sandbox/MethodEffect/Pop/Pop/Pop_SSP2_2080_NLD_M3var1InPresentUrban_7308_PD7387_SD7369);
		}
	}
	
	
	container CaliEffect
	{
		container Urban
		{
			unit<uint8> UrbanFile: nrofrows = 2
			{
				attribute<string> filename :[
										'IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369',
										'IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369_Urban_Cali'
										];
			}
	
			container Urb: =
				for_each_ndvda(
					 UrbanFile/filename
					, input/gtopo
					, bool
					, 'urban'
					, '%MondiaalDataDir%/Sandbox/CaliEffect/' + UrbanFile/filename+'.tif'
				);
				
			container M3var1_vs_M3var1_Urban_Cali := combineT(Sandbox/CaliEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369, Sandbox/CaliEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369_Urban_Cali);
		}
		
		container Pop
		{
			unit<uint8> PopFile: nrofrows = 2
			{
				attribute<string> filename :[
										'Pop_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369',
										'Pop_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369_Urban_Cali'
										];
			}
				
			container Pop: =
				for_each_ndvda(
					 PopFile/filename
					, input/gtopo
					, Units/Person
					, 'total population'
					, '%MondiaalDataDir%/Sandbox/CaliEffect/' + PopFile/filename+'.tif'
				);
				
			container M3var1_vs_M3var1_Urban_Cali := DifT(Sandbox/CaliEffect/Pop/Pop/Pop_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369, Sandbox/CaliEffect/Pop/Pop/Pop_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369_Urban_Cali);
		}
	}

	container FloodProneEffect
	{
		container Urban
		{
			unit<uint8> UrbanFile: nrofrows = 3
			{
				attribute<string> filename :[
										'IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369',
										'IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369_floodprone_restricted',
										'IsUrban_SSP2_2080_NLD_M3var1_7308_PD7419_SD7391_floodprone_unrestricted'
										];
			}
	
			container Urb: =
				for_each_ndvda(
					 UrbanFile/filename
					, input/gtopo
					, bool
					, 'urban'
					, '%MondiaalDataDir%/Sandbox/FloodproneEffect/' + UrbanFile/filename+'.tif'
				);

			container M3var1_half_vs_M3var1_restricted              := combineT(Sandbox/FloodproneEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369, 
																					  Sandbox/FloodproneEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369_floodprone_restricted);

			container M3var1_restricted_vs_M3var1_unrestricted := combineT(Sandbox/FloodproneEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369_floodprone_restricted, 
																					  Sandbox/FloodproneEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1_7308_PD7419_SD7391_floodprone_unrestricted);

			container M3var1_half_vs_M3var1_restricted_M3var1_unrestricted := combine3T(Sandbox/FloodproneEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369, 
																					   Sandbox/FloodproneEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369_floodprone_restricted, 
																					   Sandbox/FloodproneEffect/Urban/Urb/IsUrban_SSP2_2080_NLD_M3var1_7308_PD7419_SD7391_floodprone_unrestricted);

			attribute<uint8> M3var1_restricted_vs_M3var1_unrestricted_C (Input/gtopo):= Urban/M3var1_restricted_vs_M3var1_unrestricted/urbcombine/UnionData[uint8]<> 0b ? Urban/M3var1_restricted_vs_M3var1_unrestricted/urbcombine/UnionData[uint8] : /Input/administrative/Countries/Country_grid;
		}
		
		container Pop
		{
			unit<uint8> PopFile: nrofrows = 2
			{
				attribute<string> filename :[
										'Pop_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369',
										'Pop_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369_floodprone_restricted'
										];
			}
				
			container Pop: =
				for_each_ndvda(
					 PopFile/filename
					, input/gtopo
					, Units/Person
					, 'total population'
					, '%MondiaalDataDir%/Sandbox/FloodproneEffect/' + PopFile/filename+'.tif'
				);
				
			container M3var1_vs_M3var1_floodprone_restricted := DifT(Sandbox/FloodproneEffect/Pop/Pop/Pop_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369, Sandbox/FloodproneEffect/Pop/Pop/Pop_SSP2_2080_NLD_M3var1_7308_PD7387_SD7369_floodprone_restricted);
		}
	}
}