////////////////////////////////////////////////////////////////////////////////////////////
//            (C) Configuration Towards an Urban Preview - 2UP 2021                       //
//         Netherlands Environmental Assessment Agency http://www.pbl.nl/en/contact       //
//  This work is licensed under a Creative Commons Attribution 4.0 International License  //
//              CC BY-SA 4.0 https://creativecommons.org/licenses/by-sa/4.0/              //
////////////////////////////////////////////////////////////////////////////////////////////

// Author:   Bas van Bemmel
// Function: Counting capital-area intersections with different GADM levels

container Capital_GADM
{
	//TouchUrb10SSP2 : GADM-polygons which touch M3v3_exposure_SSP2_2010_urb polygons selected on WUP2018_F13_Capital_Cities
	//TouchUrb2100SSP2 : GADM-polygons which touch M3v3_exposure_SSP2_2100_urb polygons selected on WUP2018_F13_Capital_Cities

	unit<uint32> AdminArea
		:  StorageName     = "%MondiaalDataDir%/administrative/all_levels/gadm36.gdb"
// 		,  SQLString       = "SELECT * FROM gadm36 WHERE 
//  		GID_0 <> 'SHN' AND 
//  		GID_0 <> 'SLB' AND 
//  		GID_0 <> 'VNM' AND 
//  		GID_0 <> 'TKL' AND 
//  		GID_0 <> 'TON' AND 
//  		GID_0 <> 'TUV' AND 
//  		GID_0 <> 'UMI' AND 
//  		GID_0 <> 'VUT' AND 
//  		GID_0 <> 'WLF' AND 
//  		GID_0 <> 'WSM'"
		,  SQLString       = "SELECT * FROM gadm36 WHERE TouchUrb10SSP2 <> 0 AND NAME_1 <> 'IJsselmeer'"
		//,  SQLString       = "SELECT * FROM gadm36 WHERE TouchUrb10SSP2 <> 0 AND NAME_1 <> 'IJsselmeer' AND (NAME_0='Netherlands' OR NAME_0='Belgium' OR NAME_0='Luxembourg')"
		,  StorageType     = "gdal.vect"
		,  url             = "https://gadm.org/download_world.html"
		,  StorageReadOnly = "True"
		,  Source          = "GADM 28 februar 2019",
		DialogType         = "Map",
		DialogData         = "Geometry"
	{
		attribute</Input/LatLong> Geometry(polygon);
		
		attribute</Input/LatLong_mdegrees> Geometry_mdegrees (polygon) := Geometry[Input/LatLong_mdegrees];
		attribute<float64> surface                                             := area(dpolygon(Geometry_mdegrees), float64);
		
                               attribute<string>        Name_0;
                               attribute<Name_0_unique> Name_0_Rel          := rlookup(Name_0, Name_0_unique/values);

		attribute<int32>          TouchUrb10SSP20                              := Makedefined(TouchUrb10SSP2,0i);
		attribute<gadm_connected> gadm_connected_rel                           := rlookup(TouchUrb10SSP20, gadm_connected/values);
		attribute<GID0>           GID0_rel                                     := rlookup(GID_0, GID0/values);
		attribute<GID1>           GID1_rel                                     := rlookup(GID_1, GID1/values);
		attribute<GID2>           GID2_rel                                     := rlookup(GID_2, GID2/values);
		attribute<GID3>           GID3_rel                                     := rlookup(GID_3, GID3/values);
		attribute<GID4>           GID4_rel                                     := rlookup(GID_4, GID4/values);
		attribute<GID5>           GID5_rel                                     := rlookup(GID_5, GID5/values);
	}

	unit<uint32> Name_0_unique := unique(AdminArea/Name_0)
		{
			attribute<uint32> count := pcount(AdminArea/Name_0_Rel);
		}


	unit<uint32> gadm_connected := unique(AdminArea/TouchUrb10SSP2)
	, DialogData  = "Geometry"
	, DialogType  = "Map"
	{
		attribute<string>                          label                              := string(values);
		attribute</Input/LatLong_mdegrees> Geometry     (polygon)             := partitioned_union_polygon(ipolygon(AdminArea/Geometry_mdegrees),AdminArea/gadm_connected_rel)[/Input/LatLong_mdegrees];
		attribute</Input/LatLong>          GeometryLL   (polygon)             := Geometry[/Input/LatLong];

		attribute<.>                               gadm_connected_rel             (Input/gtopo) := poly2grid(GeometryLL, Input/gtopo);
		attribute<string>                          gadm_connected_gid0            (Input/gtopo) := string(gadm_connected_rel) + '_' + string(GID0/GID0_rel);
		attribute<string>                          gadm_connected_gid1            (Input/gtopo) := string(gadm_connected_rel) + '_' + string(GID1/GID1_rel);
		attribute<string>                          gadm_connected_gid2            (Input/gtopo) := string(gadm_connected_rel) + '_' + string(GID2/GID2_rel);
		attribute<string>                          gadm_connected_gid3            (Input/gtopo) := string(gadm_connected_rel) + '_' + string(GID3/GID3_rel);
		attribute<string>                          gadm_connected_gid4            (Input/gtopo) := string(gadm_connected_rel) + '_' + string(GID4/GID4_rel);
		attribute<string>                          gadm_connected_gid5            (Input/gtopo) := string(gadm_connected_rel) + '_' + string(GID5/GID5_rel);

		attribute<gadm_connected_gid0_unique>      gadm_connected_gid0_unique_rel (Input/gtopo) := rlookup(gadm_connected_gid0, gadm_connected_gid0_unique/values);
		attribute<gadm_connected_gid1_unique>      gadm_connected_gid1_unique_rel (Input/gtopo) := rlookup(gadm_connected_gid1, gadm_connected_gid1_unique/values);
		attribute<gadm_connected_gid2_unique>      gadm_connected_gid2_unique_rel (Input/gtopo) := rlookup(gadm_connected_gid2, gadm_connected_gid2_unique/values);
		attribute<gadm_connected_gid3_unique>      gadm_connected_gid3_unique_rel (Input/gtopo) := rlookup(gadm_connected_gid3, gadm_connected_gid3_unique/values);
		attribute<gadm_connected_gid4_unique>      gadm_connected_gid4_unique_rel (Input/gtopo) := rlookup(gadm_connected_gid4, gadm_connected_gid4_unique/values);
		attribute<gadm_connected_gid5_unique>      gadm_connected_gid5_unique_rel (Input/gtopo) := rlookup(gadm_connected_gid5, gadm_connected_gid5_unique/values);

		attribute<string>                          ISO3_grid         (Input/gtopo) := Input/administrative/Countries/ISO3;
		attribute<string>                          Name_Grid         (Input/gtopo) := rjoin(ISO3_grid,Input/administrative/Capital/UN/ISO3,Input/administrative/Capital/UN/Name);
		attribute<int32>                           Index_grid        (Input/gtopo) := rjoin(ISO3_grid,Input/administrative/Capital/UN/ISO3,Input/administrative/Capital/UN/Index_);
		attribute<string>                          Capital_City_Grid (Input/gtopo) := rjoin(ISO3_grid,Input/administrative/Capital/UN/ISO3,Input/administrative/Capital/UN/Capital_City);
	}
	
	unit<uint32> gadm_connected_export := gadm_connected
	{
		attribute<string>                          Capital_City_1:= first(gadm_connected/Capital_City_Grid, gadm_connected/gadm_connected_rel);
		attribute<string>                          Capital_City_2:= last(gadm_connected/Capital_City_Grid, gadm_connected/gadm_connected_rel);
		attribute<string>                          Name_1        := first(gadm_connected/Name_Grid, gadm_connected/gadm_connected_rel);
		attribute<string>                          Name_2        := last(gadm_connected/Name_Grid, gadm_connected/gadm_connected_rel);
		attribute<int32>                           Index_1       := first(gadm_connected/Index_grid, gadm_connected/gadm_connected_rel);
		attribute<int32>                           Index_2       := last(gadm_connected/Index_grid, gadm_connected/gadm_connected_rel);
		attribute<int32>                           Index_mean    := mean(gadm_connected/Index_grid, gadm_connected/gadm_connected_rel);
		attribute<string>                          ISO3_1        := first(gadm_connected/ISO3_grid, gadm_connected/gadm_connected_rel);
		attribute<string>                          ISO3_2        := first(gadm_connected/ISO3_grid, gadm_connected/gadm_connected_rel);
		attribute<uint32>                          aantal_gid0   := pcount(gadm_connected_gid0_unique/gadm_connected_rel);
		attribute<uint32>                          aantal_gid1   := pcount(gadm_connected_gid1_unique/gadm_connected_rel);
		attribute<uint32>                          aantal_gid2   := pcount(gadm_connected_gid2_unique/gadm_connected_rel);
		attribute<uint32>                          aantal_gid3   := pcount(gadm_connected_gid3_unique/gadm_connected_rel);
		attribute<uint32>                          aantal_gid4   := pcount(gadm_connected_gid4_unique/gadm_connected_rel);
		attribute<uint32>                          aantal_gid5   := pcount(gadm_connected_gid5_unique/gadm_connected_rel);

	}
	unit<uint32> variable_gadm_connected_export := SubItem_PropValues(gadm_connected_export,'name');
	container export_csv := Report/WriteTable32ToCSV(gadm_connected_export , AsList(variable_gadm_connected_export/name, ';'), '%LocalDataProjDir%/results/count_gadm_capital2010SSP2.csv');

	unit<uint32> gadm_connected_gid0_unique := unique(gadm_connected/gadm_connected_gid0)
	{
		attribute<uint32>         count              := pcount(gadm_connected/gadm_connected_gid0_unique_rel);
		attribute<gadm_connected> gadm_connected_rel := value(substr(values, 0 ,strlen(values) - strpos(values, '_')), gadm_connected);
		attribute<GID0>           GID0_rel           := value(substr(values, strpos(values, '_') + 1),GID0);
		attribute<string>         Capital_City_1     := gadm_connected_export/Capital_City_1[gadm_connected_rel];
		attribute<string>         Capital_City_2     := gadm_connected_export/Capital_City_2[gadm_connected_rel];
		attribute<string>         CountryName_1      := gadm_connected_export/Name_1[gadm_connected_rel];
		attribute<string>         CountryName_2      := gadm_connected_export/Name_2[gadm_connected_rel];
		attribute<int32>          Index_1            := gadm_connected_export/Index_1[gadm_connected_rel];
		attribute<int32>          Index_2            := gadm_connected_export/Index_2[gadm_connected_rel];
		attribute<int32>          Index_mean         := gadm_connected_export/Index_mean[gadm_connected_rel];
		attribute<string>         ISO3_1             := gadm_connected_export/ISO3_1[gadm_connected_rel];
		attribute<string>         ISO3_2             := gadm_connected_export/ISO3_2[gadm_connected_rel];
		attribute<string>         name_0             := rjoin(GID0_rel,AdminArea/GID0_rel,AdminArea/name_0);
	}

	unit<uint32> gadm_connected_gid1_unique := unique(gadm_connected/gadm_connected_gid1)
	{
		attribute<uint32>         count              := pcount(gadm_connected/gadm_connected_gid1_unique_rel);
		attribute<gadm_connected> gadm_connected_rel := value(substr(values, 0 ,strlen(values) - strpos(values, '_')), gadm_connected);
		attribute<GID1>           GID1_rel           := value(substr(values, strpos(values, '_') + 1),GID1);
		attribute<string>         Capital_City_1     := gadm_connected_export/Capital_City_1[gadm_connected_rel];
		attribute<string>         Capital_City_2     := gadm_connected_export/Capital_City_2[gadm_connected_rel];
		attribute<string>         CountryName_1      := gadm_connected_export/Name_1[gadm_connected_rel];
		attribute<string>         CountryName_2      := gadm_connected_export/Name_2[gadm_connected_rel];
		attribute<int32>          Index_1            := gadm_connected_export/Index_1[gadm_connected_rel];
		attribute<int32>          Index_2            := gadm_connected_export/Index_2[gadm_connected_rel];
		attribute<int32>          Index_mean         := gadm_connected_export/Index_mean[gadm_connected_rel];
		attribute<string>         ISO3_1             := gadm_connected_export/ISO3_1[gadm_connected_rel];
		attribute<string>         ISO3_2             := gadm_connected_export/ISO3_2[gadm_connected_rel];
		attribute<string>         name_1             := rjoin(GID1_rel,AdminArea/GID1_rel,AdminArea/name_1);
		attribute<string>         type_1             := rjoin(GID1_rel,AdminArea/GID1_rel,AdminArea/type_1);
	}

	unit<uint32> gadm_connected_gid2_unique := unique(gadm_connected/gadm_connected_gid2)
	{
		attribute<uint32>         count              := pcount(gadm_connected/gadm_connected_gid2_unique_rel);
		attribute<gadm_connected> gadm_connected_rel := value(substr(values, 0 ,strlen(values) - strpos(values, '_')), gadm_connected);
		attribute<GID2>           GID2_rel           := value(substr(values, strpos(values, '_') + 1),GID2);
		attribute<string>         Capital_City_1     := gadm_connected_export/Capital_City_1[gadm_connected_rel];
		attribute<string>         Capital_City_2     := gadm_connected_export/Capital_City_2[gadm_connected_rel];
		attribute<string>         CountryName_1      := gadm_connected_export/Name_1[gadm_connected_rel];
		attribute<string>         CountryName_2      := gadm_connected_export/Name_2[gadm_connected_rel];
		attribute<int32>          Index_1            := gadm_connected_export/Index_1[gadm_connected_rel];
		attribute<int32>          Index_2            := gadm_connected_export/Index_2[gadm_connected_rel];
		attribute<int32>          Index_mean         := gadm_connected_export/Index_mean[gadm_connected_rel];
		attribute<string>         ISO3_1             := gadm_connected_export/ISO3_1[gadm_connected_rel];
		attribute<string>         ISO3_2             := gadm_connected_export/ISO3_2[gadm_connected_rel];
		attribute<string>         name_2             := rjoin(GID2_rel,AdminArea/GID2_rel,AdminArea/name_2);
		attribute<string>         type_2             := rjoin(GID2_rel,AdminArea/GID2_rel,AdminArea/type_2);
	}

	unit<uint32> gadm_connected_gid3_unique := unique(gadm_connected/gadm_connected_gid3)
	{
		attribute<uint32>         count              := pcount(gadm_connected/gadm_connected_gid3_unique_rel);
		attribute<gadm_connected> gadm_connected_rel := value(substr(values, 0 ,strlen(values) - strpos(values, '_')), gadm_connected);
		attribute<GID3>           GID3_rel           := value(substr(values, strpos(values, '_') + 1),GID3);
		attribute<string>         Capital_City_1     := gadm_connected_export/Capital_City_1[gadm_connected_rel];
		attribute<string>         Capital_City_2     := gadm_connected_export/Capital_City_2[gadm_connected_rel];
		attribute<string>         CountryName_1      := gadm_connected_export/Name_1[gadm_connected_rel];
		attribute<string>         CountryName_2      := gadm_connected_export/Name_2[gadm_connected_rel];
		attribute<int32>          Index_1            := gadm_connected_export/Index_1[gadm_connected_rel];
		attribute<int32>          Index_2            := gadm_connected_export/Index_2[gadm_connected_rel];
		attribute<int32>          Index_mean         := gadm_connected_export/Index_mean[gadm_connected_rel];
		attribute<string>         ISO3_1             := gadm_connected_export/ISO3_1[gadm_connected_rel];
		attribute<string>         ISO3_2             := gadm_connected_export/ISO3_2[gadm_connected_rel];
		attribute<string>         name_3             := rjoin(GID3_rel,AdminArea/GID3_rel,AdminArea/name_3);
		attribute<string>         type_3             := rjoin(GID3_rel,AdminArea/GID3_rel,AdminArea/type_3);
	}

	unit<uint32> gadm_connected_gid4_unique := unique(gadm_connected/gadm_connected_gid4)
	{
		attribute<uint32>         count              := pcount(gadm_connected/gadm_connected_gid4_unique_rel);
		attribute<gadm_connected> gadm_connected_rel := value(substr(values, 0 ,strlen(values) - strpos(values, '_')), gadm_connected);
		attribute<GID4>           GID4_rel           := value(substr(values, strpos(values, '_') + 1),GID4);
		attribute<string>         Capital_City_1     := gadm_connected_export/Capital_City_1[gadm_connected_rel];
		attribute<string>         Capital_City_2     := gadm_connected_export/Capital_City_2[gadm_connected_rel];
		attribute<string>         CountryName_1      := gadm_connected_export/Name_1[gadm_connected_rel];
		attribute<string>         CountryName_2      := gadm_connected_export/Name_2[gadm_connected_rel];
		attribute<int32>          Index_1            := gadm_connected_export/Index_1[gadm_connected_rel];
		attribute<int32>          Index_2            := gadm_connected_export/Index_2[gadm_connected_rel];
		attribute<int32>          Index_mean         := gadm_connected_export/Index_mean[gadm_connected_rel];
		attribute<string>         ISO3_1             := gadm_connected_export/ISO3_1[gadm_connected_rel];
		attribute<string>         ISO3_2             := gadm_connected_export/ISO3_2[gadm_connected_rel];
		attribute<string>         name_4             := rjoin(GID4_rel,AdminArea/GID4_rel,AdminArea/name_4);
		attribute<string>         type_4             := rjoin(GID4_rel,AdminArea/GID4_rel,AdminArea/type_4);
	}
	
	unit<uint32> gadm_connected_gid5_unique := unique(gadm_connected/gadm_connected_gid5)
	{
		attribute<uint32>         count              := pcount(gadm_connected/gadm_connected_gid5_unique_rel);
		attribute<gadm_connected> gadm_connected_rel := value(substr(values, 0 ,strlen(values) - strpos(values, '_')), gadm_connected);
		attribute<GID5>           GID5_rel           := value(substr(values, strpos(values, '_') + 1),GID5);
		attribute<string>         Capital_City_1     := gadm_connected_export/Capital_City_1[gadm_connected_rel];
		attribute<string>         Capital_City_2     := gadm_connected_export/Capital_City_2[gadm_connected_rel];
		attribute<string>         CountryName_1      := gadm_connected_export/Name_1[gadm_connected_rel];
		attribute<string>         CountryName_2      := gadm_connected_export/Name_2[gadm_connected_rel];
		attribute<int32>          Index_1            := gadm_connected_export/Index_1[gadm_connected_rel];
		attribute<int32>          Index_2            := gadm_connected_export/Index_2[gadm_connected_rel];
		attribute<int32>          Index_mean         := gadm_connected_export/Index_mean[gadm_connected_rel];
		attribute<string>         ISO3_1             := gadm_connected_export/ISO3_1[gadm_connected_rel];
		attribute<string>         ISO3_2             := gadm_connected_export/ISO3_2[gadm_connected_rel];
		attribute<string>         name_5             := rjoin(GID5_rel,AdminArea/GID5_rel,AdminArea/name_5);
		attribute<string>         type_5             := rjoin(GID5_rel,AdminArea/GID5_rel,AdminArea/type_5);
	}

	unit<uint32> GID0 := unique(strlen(AdminArea/GID_0) < 3 ? string(0 / 0) : AdminArea/GID_0)
	, DialogData  = "Geometry"
	, DialogType  = "Map"
	{
		attribute<string>                          label := string(values);
		attribute</Input/LatLong_mdegrees> Geometry   (polygon) := partitioned_union_polygon(ipolygon(AdminArea/Geometry_mdegrees),AdminArea/GID0_rel)[/Input/LatLong_mdegrees];
		attribute</Input/LatLong>          GeometryLL (polygon) := Geometry[/Input/LatLong];
		attribute<.>                               GID0_rel   (Input/gtopo) := poly2grid(GeometryLL, Input/gtopo);
		attribute<string>                          name_0     (Input/gtopo) := rjoin(GID0_rel,AdminArea/GID0_rel,AdminArea/name_0);
	}

	unit<uint32> GID1 := unique(strlen(AdminArea/GID_1) < 3 ? string(0 / 0) : AdminArea/GID_1)
	, DialogData  = "Geometry"
	, DialogType  = "Map"
	{
		attribute<string>                          label := string(values);
		attribute</Input/LatLong_mdegrees> Geometry   (polygon) := partitioned_union_polygon(ipolygon(AdminArea/Geometry_mdegrees),AdminArea/GID1_rel)[/Input/LatLong_mdegrees];
		attribute</Input/LatLong>          GeometryLL (polygon) := Geometry[/Input/LatLong];
		attribute<.>                               GID1_rel   (Input/gtopo) := poly2grid(GeometryLL, Input/gtopo);
		attribute<string>                          name_1     (Input/gtopo) := rjoin(GID1_rel,AdminArea/GID1_rel,AdminArea/name_1);
		attribute<string>                          type_1     (Input/gtopo) := rjoin(GID1_rel,AdminArea/GID1_rel,AdminArea/type_1);
	}

	unit<uint32> GID2 := unique(strlen(AdminArea/GID_2) < 3 ? string(0 / 0) : AdminArea/GID_2)
	, DialogData  = "Geometry"
	, DialogType  = "Map"
	{
		attribute<string>                          label := string(values);
		attribute</Input/LatLong_mdegrees> Geometry   (polygon) := partitioned_union_polygon(ipolygon(AdminArea/Geometry_mdegrees),AdminArea/GID2_rel)[/Input/LatLong_mdegrees];
		attribute</Input/LatLong>          GeometryLL (polygon) := Geometry[/Input/LatLong];
		attribute<.>                               GID2_rel   (Input/gtopo) := poly2grid(GeometryLL, Input/gtopo);
		attribute<string>                          name_2     (Input/gtopo) := rjoin(GID2_rel,AdminArea/GID2_rel,AdminArea/name_2);
		attribute<string>                          type_2     (Input/gtopo) := rjoin(GID2_rel,AdminArea/GID2_rel,AdminArea/type_2);
	}

	unit<uint32> GID3 := unique(strlen(AdminArea/GID_3) < 3 ? string(0 / 0) : AdminArea/GID_3)
	, DialogData  = "Geometry"
	, DialogType  = "Map"
	{
		attribute<string>                          label := string(values);
		attribute</Input/LatLong_mdegrees> Geometry   (polygon) := partitioned_union_polygon(ipolygon(AdminArea/Geometry_mdegrees),AdminArea/GID3_rel)[/Input/LatLong_mdegrees];
		attribute</Input/LatLong>          GeometryLL (polygon) := Geometry[/Input/LatLong];
		attribute<.>                               GID3_rel   (Input/gtopo) := poly2grid(GeometryLL, Input/gtopo);
		attribute<string>                          name_3     (Input/gtopo) := rjoin(GID3_rel,AdminArea/GID3_rel,AdminArea/name_3);
		attribute<string>                          type_3     (Input/gtopo) := rjoin(GID3_rel,AdminArea/GID3_rel,AdminArea/type_3);
	}
	
	unit<uint32> GID4 := unique(strlen(AdminArea/GID_4) < 3 ? string(0 / 0) : AdminArea/GID_4)
	, DialogData  = "Geometry"
	, DialogType  = "Map"
	{
		attribute<string>                          label := string(values);
		attribute</Input/LatLong_mdegrees> Geometry   (polygon) := partitioned_union_polygon(ipolygon(AdminArea/Geometry_mdegrees),AdminArea/GID4_rel)[/Input/LatLong_mdegrees];
		attribute</Input/LatLong>          GeometryLL (polygon) := Geometry[/Input/LatLong];
		attribute<.>                               GID4_rel   (Input/gtopo) := poly2grid(GeometryLL, Input/gtopo);
		attribute<string>                          name_4     (Input/gtopo) := rjoin(GID4_rel,AdminArea/GID4_rel,AdminArea/name_4);
		attribute<string>                          type_4     (Input/gtopo) := rjoin(GID4_rel,AdminArea/GID4_rel,AdminArea/type_4);
	}

	unit<uint32> GID5 := unique(strlen(AdminArea/GID_5) < 3 ? string(0 / 0) : AdminArea/GID_5)
	, DialogData  = "Geometry"
	, DialogType  = "Map"
	{
		attribute<string>                          label := string(values);
		attribute</Input/LatLong_mdegrees> Geometry   (polygon) := partitioned_union_polygon(ipolygon(AdminArea/Geometry_mdegrees),AdminArea/GID5_rel)[/Input/LatLong_mdegrees];
		attribute</Input/LatLong>          GeometryLL (polygon) := Geometry[/Input/LatLong];
		attribute<.>                               GID5_rel   (Input/gtopo) := poly2grid(GeometryLL, Input/gtopo);
		attribute<string>                          name_5     (Input/gtopo) := rjoin(GID5_rel,AdminArea/GID5_rel,AdminArea/name_5);
		attribute<string>                          type_5     (Input/gtopo) := rjoin(GID5_rel,AdminArea/GID5_rel,AdminArea/type_5);
	}
}