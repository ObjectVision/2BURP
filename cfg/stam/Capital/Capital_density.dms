////////////////////////////////////////////////////////////////////////////////////////////
//            (C) Configuration Towards an Urban Preview - 2UP 2021                       //
//         Netherlands Environmental Assessment Agency http://www.pbl.nl/en/contact       //
//  This work is licensed under a Creative Commons Attribution 4.0 International License  //
//              CC BY-SA 4.0 https://creativecommons.org/licenses/by-sa/4.0/              //
////////////////////////////////////////////////////////////////////////////////////////////

// Author:   Bas van Bemmel
// Function: Calculate for contigious capital area for each timestep in SSP2 at location of capital (lat,long) the population density according two methods:
// 1: urban area for each timestep (popdensity will be more constant)
// 2: fixed urban area 2080 (in general popdensities wil rise sharper compared to method 1)

container Capital_Density: Using = "Units;"
	{
	container SSP2 := for_each_ne(Classifications/ProjectionDate/name, 'DD_T('+string(Classifications/ProjectionDate/Yr)+'w)');

	template DD_T
		{
		//begin case parameter
		parameter<uint16> Year;
		//end case parameter
		parameter<string> Yearstr:=string(Year);

		unit<uint32> contiguous          :== 'district(Postprocessing/Scenarios/ReadResults/All/urb/SSP2/Y'+Yearstr+')'
			, DialogData  = "un_rel"
			, DialogType  = "Map"
		{
			attribute<Input/administrative/Capital/UN>  un_rel := modus(Input/administrative/Capital/UN/un_rel, districts);
			attribute<string> name                      := replace(Input/administrative/Capital/UN/name[un_rel],',','');
			attribute<string> ISO3                      := Input/administrative/Capital/UN/ISO3[un_rel];
			attribute<int32>  Index                     := Input/administrative/Capital/UN/Index_[un_rel];
			attribute<string> Capital_City              := replace(Input/administrative/Capital/UN/Capital_City[un_rel],',','');
			attribute<km2>    km2WCEA                   := Input/administrative/Capital/UN/km2WCEA[un_rel];
			attribute<km2>    area_country              := Input/administrative/Capital/UN/area[un_rel];
			attribute<string> Continent                 := Input/administrative/Capital/UN/Continent[un_rel];
			attribute<bool>   IsIsland                  := Input/administrative/Capital/UN/IsIsland[un_rel];

			attribute<km2>     area   := sum(Input/gtopo/area,Districts);
			attribute<Person>  upop   :== 'sum(Postprocessing/Scenarios/ReadResults/All/upop/SSP2/Y'+Yearstr+',Districts)';
			attribute<Person>  tpop   :== 'sum(Postprocessing/Scenarios/ReadResults/All/tpop/SSP2/Y'+Yearstr+',Districts)';

			attribute<Person_km2> PopDensInDistrict:=upop / area;

			attribute<contiguous> contiguous_rel (Input/gtopo) := Input/administrative/Capital/UN/nrCapitals == 1 ? Districts : 0/0;
			attribute<km2> area_cap                                    := sum(Input/gtopo/area, contiguous_rel);
		}


		unit<uint32> capital := subset(contiguous/area_cap > 0f)			, DialogData  = "un_rel"
			, DialogType  = "Map"
		{
			attribute<uint32> IsCapital                 := (area > 0f)[uint32];

			attribute<km2>    area                     := contiguous/area[nr_OrgEntity];
			attribute<Input/administrative/Capital/UN>  un_rel:= contiguous/un_rel[nr_OrgEntity];
			attribute<string> name                     := contiguous/name[nr_OrgEntity];
			attribute<string> ISO3                     := contiguous/ISO3[nr_OrgEntity];
			attribute<int32>  Index                    := contiguous/Index[nr_OrgEntity];
			attribute<string> Capital_City             := contiguous/Capital_City[nr_OrgEntity];
			attribute<km2>    area_country             := contiguous/area_country[nr_OrgEntity];
			attribute<string> Continent                := contiguous/Continent[nr_OrgEntity];
			attribute<uint32> IsIsland                 := contiguous/IsIsland[nr_OrgEntity][uint32];

			attribute<km2>    areacap                  := contiguous/area[nr_OrgEntity];
			attribute<Person> upopcap                  := contiguous/upop[nr_OrgEntity];
			attribute<Person> tpopcap                  := contiguous/tpop[nr_OrgEntity];

			attribute<Person_km2> PopDensInDistrict:=contiguous/PopDensInDistrict[nr_OrgEntity];
		}

	unit<uint32> variable_capital := SubItem_PropValues(capital,'name');
	container export_csv := Report/WriteTable32ToCSV(capital , AsList(variable_capital/name, ';'), '%LocalDataProjDir%/results/DistrictsDensity_capital_SSP2_'+Yearstr+'.csv');
	}

	unit<uint32> All:=SSP2/Y2100/capital
	{
		attribute<km2>    area                     := SSP2/Y2100/capital/area;
		attribute<Input/administrative/Capital/UN>  un_rel:= SSP2/Y2100/capital/un_rel;
		attribute<string> name                     := SSP2/Y2100/capital/name;
		attribute<string> ISO3                     := SSP2/Y2100/capital/ISO3;
		attribute<int32>  Index                    := SSP2/Y2100/capital/Index;
		attribute<string> Capital_City             := SSP2/Y2100/capital/Capital_City;
		attribute<km2>    area_country             := SSP2/Y2100/capital/area_country;
		attribute<string> Continent                := SSP2/Y2100/capital/Continent;
		attribute<uint32> IsIsland                 := SSP2/Y2100/capital/IsIsland;

		attribute<Person_km2> PopDensInDistrict2010 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2010/capital/Index,SSP2/Y2010/capital/PopDensInDistrict);
		attribute<Person_km2> PopDensInDistrict2020 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2020/capital/Index,SSP2/Y2020/capital/PopDensInDistrict);
		attribute<Person_km2> PopDensInDistrict2030 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2030/capital/Index,SSP2/Y2030/capital/PopDensInDistrict);
		attribute<Person_km2> PopDensInDistrict2040 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2040/capital/Index,SSP2/Y2040/capital/PopDensInDistrict);
		attribute<Person_km2> PopDensInDistrict2050 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2050/capital/Index,SSP2/Y2050/capital/PopDensInDistrict);
		attribute<Person_km2> PopDensInDistrict2060 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2060/capital/Index,SSP2/Y2060/capital/PopDensInDistrict);
		attribute<Person_km2> PopDensInDistrict2070 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2070/capital/Index,SSP2/Y2070/capital/PopDensInDistrict);
		attribute<Person_km2> PopDensInDistrict2080 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2080/capital/Index,SSP2/Y2080/capital/PopDensInDistrict);
		attribute<Person_km2> PopDensInDistrict2090 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2090/capital/Index,SSP2/Y2090/capital/PopDensInDistrict);
		attribute<Person_km2> PopDensInDistrict2100 := SSP2/Y2100/capital/PopDensInDistrict;
		
		attribute<km2> areacap2010 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2010/capital/Index,SSP2/Y2010/capital/areacap);
		attribute<km2> areacap2020 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2020/capital/Index,SSP2/Y2020/capital/areacap);
		attribute<km2> areacap2030 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2030/capital/Index,SSP2/Y2030/capital/areacap);
		attribute<km2> areacap2040 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2040/capital/Index,SSP2/Y2040/capital/areacap);
		attribute<km2> areacap2050 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2050/capital/Index,SSP2/Y2050/capital/areacap);
		attribute<km2> areacap2060 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2060/capital/Index,SSP2/Y2060/capital/areacap);
		attribute<km2> areacap2070 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2070/capital/Index,SSP2/Y2070/capital/areacap);
		attribute<km2> areacap2080 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2080/capital/Index,SSP2/Y2080/capital/areacap);
		attribute<km2> areacap2090 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2090/capital/Index,SSP2/Y2090/capital/areacap);
		attribute<km2> areacap2100 := SSP2/Y2100/capital/areacap;

		attribute<Person> upopcap2010 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2010/capital/Index,SSP2/Y2010/capital/upopcap);
		attribute<Person> upopcap2020 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2020/capital/Index,SSP2/Y2020/capital/upopcap);
		attribute<Person> upopcap2030 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2030/capital/Index,SSP2/Y2030/capital/upopcap);
		attribute<Person> upopcap2040 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2040/capital/Index,SSP2/Y2040/capital/upopcap);
		attribute<Person> upopcap2050 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2050/capital/Index,SSP2/Y2050/capital/upopcap);
		attribute<Person> upopcap2060 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2060/capital/Index,SSP2/Y2060/capital/upopcap);
		attribute<Person> upopcap2070 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2070/capital/Index,SSP2/Y2070/capital/upopcap);
		attribute<Person> upopcap2080 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2080/capital/Index,SSP2/Y2080/capital/upopcap);
		attribute<Person> upopcap2090 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2090/capital/Index,SSP2/Y2090/capital/upopcap);
		attribute<Person> upopcap2100 := SSP2/Y2100/capital/upopcap;

		attribute<Person> tpopcap2010 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2010/capital/Index,SSP2/Y2010/capital/tpopcap);
		attribute<Person> tpopcap2020 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2020/capital/Index,SSP2/Y2020/capital/tpopcap);
		attribute<Person> tpopcap2030 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2030/capital/Index,SSP2/Y2030/capital/tpopcap);
		attribute<Person> tpopcap2040 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2040/capital/Index,SSP2/Y2040/capital/tpopcap);
		attribute<Person> tpopcap2050 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2050/capital/Index,SSP2/Y2050/capital/tpopcap);
		attribute<Person> tpopcap2060 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2060/capital/Index,SSP2/Y2060/capital/tpopcap);
		attribute<Person> tpopcap2070 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2070/capital/Index,SSP2/Y2070/capital/tpopcap);
		attribute<Person> tpopcap2080 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2080/capital/Index,SSP2/Y2080/capital/tpopcap);
		attribute<Person> tpopcap2090 := rjoin(SSP2/Y2100/capital/Index,SSP2/Y2090/capital/Index,SSP2/Y2090/capital/tpopcap);
		attribute<Person> tpopcap2100 := SSP2/Y2100/capital/tpopcap;

		attribute<Person_km2> PopDensInDistrict2010_with_area_2100 := tpopcap2010 / areacap2100;//only correct assumed spatially the same area! (not by domains!)
		attribute<Person_km2> PopDensInDistrict2020_with_area_2100 := tpopcap2020 / areacap2100;
		attribute<Person_km2> PopDensInDistrict2030_with_area_2100 := tpopcap2030 / areacap2100;
		attribute<Person_km2> PopDensInDistrict2040_with_area_2100 := tpopcap2040 / areacap2100;
		attribute<Person_km2> PopDensInDistrict2050_with_area_2100 := tpopcap2050 / areacap2100;
		attribute<Person_km2> PopDensInDistrict2060_with_area_2100 := tpopcap2060 / areacap2100;
		attribute<Person_km2> PopDensInDistrict2070_with_area_2100 := tpopcap2070 / areacap2100;
		attribute<Person_km2> PopDensInDistrict2080_with_area_2100 := tpopcap2080 / areacap2100;
		attribute<Person_km2> PopDensInDistrict2090_with_area_2100 := tpopcap2090 / areacap2100;
		attribute<Person_km2> PopDensInDistrict2100_with_area_2100 := SSP2/Y2100/capital/PopDensInDistrict;
	}
	unit<uint32> variable_all := SubItem_PropValues(All,'name');
	container export_csv_all := Report/WriteTable32ToCSV(All , AsList(variable_all/name, ';'), '%LocalDataProjDir%/results/DistrictsDensity_capital_SSP2_2010_2100.csv');
}