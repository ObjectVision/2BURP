////////////////////////////////////////////////////////////////////////////////////////////
//            (C) Configuration Towards an Urban Preview - 2UP 2021                       //
//         Netherlands Environmental Assessment Agency http://www.pbl.nl/en/contact       //
//  This work is licensed under a Creative Commons Attribution 4.0 International License  //
//              CC BY-SA 4.0 https://creativecommons.org/licenses/by-sa/4.0/              //
////////////////////////////////////////////////////////////////////////////////////////////

// Author:   Bas van Bemmel
// Function: Read Earthquake input maps

container Earthquake
{
	unit<ipoint> Earthquakes_Modified_Mercalli_Intensity:StorageName = "%MondiaalDataDir%/physical/Natural_Hazards/Earthquake/Earthquakes_Modified_Mercalli_Intensity/eq_frequency.tif",
		StorageType     = "gdal.grid",
		Source          = "Earthquakes Modified Mercalli Intensity  UNEP/DEWA/GRID-Europe",
		url             = "%MondiaalDataDir%/physical/Natural_Hazards/Earthquake/Earthquakes_Modified_Mercalli_Intensity/Global Risk Data Platform.mht",
		StorageReadOnly = "True",
		DialogData      = "LatLong"
		{
			attribute<uint8> ReadData_org(gtopo);
			attribute<uint8> ReadData(gtopo):=MakeDefined(ReadData_org,0b);
			attribute<bool> EQ_5 (gtopo): = (ReadData[uint32]==5 ? 1 :0)[bool];
			attribute<bool> EQ_6 (gtopo): = (ReadData[uint32]==6 ? 1 :0)[bool];
			attribute<bool> EQ_7 (gtopo): = (ReadData[uint32]==7 ? 1 :0)[bool];
			attribute<bool> EQ_8 (gtopo): = (ReadData[uint32]==8 ? 1 :0)[bool];
			attribute<bool> EQ_9 (gtopo): = (ReadData[uint32]==9 ? 1 :0)[bool];
		}

	unit<uint16> EQUAGEO
		:  StorageName     = "%MondiaalDataDir%/physical/Natural_Hazards/Earthquake/EQUAGEO/earthquakes.shp"
		,  StorageType     = "gdal.vect"
		,  url             = "%MondiaalDataDir%/physical/Natural_Hazards/Earthquake/EQUAGEO/earthquakes.txt"
		,  StorageReadOnly = "True"
		,  Source          = "",
		DialogType         = "Map",
		DialogData         = "Geometry"
		{
			attribute<LatLong> Geometry(polygon);
		}

	container Earthquake_Intensity_Zones 
	{
		attribute<EQUAGEO> EQUAGEO_grid (gtopo) := poly2grid(EQUAGEO/Geometry , gtopo);
		attribute<uint16> Zone(gtopo)           := EQUAGEO/Zone[uint16][EQUAGEO_grid];

		attribute<bool> EQUAGEO_0 (gtopo): = (Zone[uint32]==0 ? 1 :0)[bool];
		attribute<bool> EQUAGEO_1 (gtopo): = (Zone[uint32]==1 ? 1 :0)[bool];
		attribute<bool> EQUAGEO_2 (gtopo): = (Zone[uint32]==2 ? 1 :0)[bool];
		attribute<bool> EQUAGEO_3 (gtopo): = (Zone[uint32]==3 ? 1 :0)[bool];
		attribute<bool> EQUAGEO_4 (gtopo): = (Zone[uint32]==4 ? 1 :0)[bool];
		attribute<bool> EQUAGEO_10 (gtopo): = (Zone[uint32]==10 ? 1 :0)[bool];
	}
}