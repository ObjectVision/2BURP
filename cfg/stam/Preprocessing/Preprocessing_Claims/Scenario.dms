////////////////////////////////////////////////////////////////////////////////////////////
//            (C) Configuration Towards an Urban Preview - 2UP 2021                       //
//         Netherlands Environmental Assessment Agency http://www.pbl.nl/en/contact       //
//  This work is licensed under a Creative Commons Attribution 4.0 International License  //
//              CC BY-SA 4.0 https://creativecommons.org/licenses/by-sa/4.0/              //
////////////////////////////////////////////////////////////////////////////////////////////

// Author:   Bas van Bemmel
// Function: Generate population claims csv files (SSPclaim_generator.bat) for SSP-scenarios (modelling) used in /Claims/Scenario

// run-information of the generated files (after copy from LD) in %config%\data\Claim\
// GeoDMS 7.182
// PD 7264 SD 7256
// for M3 run SSPclaim_generator.bat 2 times for M3 with var1 and var2 in  M3 /Preprocessing/Claims/Scenario/UrbanShareY2015/UrbanPop and 
// also change /Input/Variant (to var1 or var2)
// replace quotes -->empty, rename files to _var and _var2


container Scenario : using = "units", url=""
{
	#include <UrbanShare.dms>

	//not used directly only for comparison purposes
	unit<uint32> UrbanShareWorld
		: StorageName     = "%MondiaalDataDir%/Preprocessing/Claims/Scenario/iamc_db_world_NCAR_urbanization.csv"//xlsx-->copy range from excel to editor, replace years-fields with prefix Y string
		, StorageType     = "gdal.vect"
		, url             = "https://tntcat.iiasa.ac.at/SspDb/dsd?Action=htmlpage&page=10#"
		                    "https://tntcat.iiasa.ac.at/SspDb/dsd?Action=htmlpage&page=30"//needs username-password"
		, Source          = "select world and NCAR urbanization output options Microsoft Excel iamc_db_world_NCAR_urbanization.xlsx"
		, StorageReadonly = "True"
		, SyncMode        = "None"
		, DialogType      = "Map"
		{
			unit<uint32> All
			{
				attribute<string>         Model;//only NCAR present
				attribute<string>         Scenario;
				attribute<string>         ScenarioShort :=left(Scenario,4);

				attribute<string>         Y2010;
				attribute<string>         Y2020;
				attribute<string>         Y2030;
				attribute<string>         Y2040;
				attribute<string>         Y2050;
				attribute<string>         Y2060;
				attribute<string>         Y2070;
				attribute<string>         Y2080;
				attribute<string>         Y2090;
				attribute<string>         Y2100;

				attribute<float64>        urbanshare_2010:=Y2010[float64];
				attribute<float64>        urbanshare_2020:=Y2020[float64];
				attribute<float64>        urbanshare_2030:=Y2030[float64];
				attribute<float64>        urbanshare_2040:=Y2040[float64];
				attribute<float64>        urbanshare_2050:=Y2050[float64];
				attribute<float64>        urbanshare_2060:=Y2060[float64];
				attribute<float64>        urbanshare_2070:=Y2070[float64];
				attribute<float64>        urbanshare_2080:=Y2080[float64];
				attribute<float64>        urbanshare_2090:=Y2090[float64];
				attribute<float64>        urbanshare_2100:=Y2100[float64];
			}
		}

		//Notes from website:
		//1. Date Source: UN Urbanization Prospects 2009 Revision, UN Population Prospects 2010 Revision
		//2. Projections are made for all 193 countries with population larger than 100,000. Those 193 countries are the same as in the population projections.
		//3. Projections are made every 5 years for the period 2010-2100;
		//4. There are potentially 9 urbanization scenarios for each country, covering the range of uncertainty and variations in the urbanizaiton pathways.
		//   The 9 scenarios are Fast-Fast, Fast-Central, Fast-Slow,Central-Fast, Central-Central, Central-Slow, Slow-Fast, Slow-Central, Slow-Slow, 
		//   with the two words representing two stages of urbanization pathways before and after 2045. Here, three main scenarios are reported: Fast-Fast (as "Fast"), 
		//   Central-Central (as "Central"), and Slow-Slow (as "Slow"). The output of 9 urbanization scenarios is available on request;
		//5. When urbanization level of a country in the base year is above 80% urban population, we only make one (central) urbanization projection for the country. 
		//   As a result, we made central urbanization projections for 193 countries, and fast and slow projection for 156 countries with less than 80% urban population in 2010.

		unit<uint32> UrbanShare
			: StorageName     = "%MondiaalDataDir%/Preprocessing/Claims/Scenario/iamc_db_countries_IIASA_WIC_population_NCAR_urbanization.csv"//xlsx-->copy range from excel to editor, replace years-fields with prefix Y string
			, SQLString       = "SELECT * FROM iamc_db_countries_IIASA_WIC_population_NCAR_urbanization WHERE Variable='Population|Urban|Share'"//965 records (5x 193)
			, StorageType     = "gdal.vect"
			, url             = "https://tntcat.iiasa.ac.at/SspDb/dsd?Action=htmlpage&page=10#"
			                    "https://tntcat.iiasa.ac.at/SspDb/dsd?Action=htmlpage&page=30"//needs username-password"
			, Source          = "select countries and NCAR urbanization output options Microsoft Excel iamc_db_urbanshare_NCAR_urbanization.xlsx"
			, StorageReadonly = "True"
			, SyncMode        = "None"
			, DialogType      = "Map"
			{
				unit<uint32> All
				{
					attribute<string>        Region;//ISO3
					attribute<string>        Name:= rjoin(Region,Input/administrative/Countries/Country/ISO3,Input/administrative/Countries/Country/Name_cor);
					attribute<string>        Model;//only NCAR present
					attribute<string>        Scenario;
					attribute<string>        ScenarioShort :=left(Scenario,4);
					attribute<string>        Key           := ScenarioShort + "_" + Region;

					attribute<string>        Y2010;
					attribute<string>        Y2020;
					attribute<string>        Y2030;
					attribute<string>        Y2040;
					attribute<string>        Y2050;
					attribute<string>        Y2060;
					attribute<string>        Y2070;
					attribute<string>        Y2080;
					attribute<string>        Y2090;
					attribute<string>        Y2100;

					attribute<float64>       urbanshare_2010:=Y2010[float64];
					attribute<float64>       urbanshare_2020:=Y2020[float64];
					attribute<float64>       urbanshare_2030:=Y2030[float64];
					attribute<float64>       urbanshare_2040:=Y2040[float64];
					attribute<float64>       urbanshare_2050:=Y2050[float64];
					attribute<float64>       urbanshare_2060:=Y2060[float64];
					attribute<float64>       urbanshare_2070:=Y2070[float64];
					attribute<float64>       urbanshare_2080:=Y2080[float64];
					attribute<float64>       urbanshare_2090:=Y2090[float64];
					attribute<float64>       urbanshare_2100:=Y2100[float64];

					attribute<float64>       population_2010 := rjoin(Region,Population/All/Region,Population/All/population_2010);
					attribute<float64>       population_2020 := rjoin(Region,Population/All/Region,Population/All/population_2020);
					attribute<float64>       population_2030 := rjoin(Region,Population/All/Region,Population/All/population_2030);
					attribute<float64>       population_2040 := rjoin(Region,Population/All/Region,Population/All/population_2040);
					attribute<float64>       population_2050 := rjoin(Region,Population/All/Region,Population/All/population_2050);
					attribute<float64>       population_2060 := rjoin(Region,Population/All/Region,Population/All/population_2060);
					attribute<float64>       population_2070 := rjoin(Region,Population/All/Region,Population/All/population_2070);
					attribute<float64>       population_2080 := rjoin(Region,Population/All/Region,Population/All/population_2080);
					attribute<float64>       population_2090 := rjoin(Region,Population/All/Region,Population/All/population_2090);
					attribute<float64>       population_2100 := rjoin(Region,Population/All/Region,Population/All/population_2100);
				}
			}


		unit<uint32> Population
			: StorageName     = "%MondiaalDataDir%/Preprocessing/Claims/Scenario/iamc_db_countries_IIASA_WIC_population_NCAR_urbanization.csv"//xlsx-->copy range from excel to editor, replace years-fields with prefix Y string
			, SQLString       = "SELECT * FROM iamc_db_countries_IIASA_WIC_population_NCAR_urbanization WHERE Model='IIASA-WiC POP' AND Variable='Population'"//965 records (5x 193)
			, StorageType     = "gdal.vect"
			, url             = "https://tntcat.iiasa.ac.at/SspDb/dsd?Action=htmlpage&page=10#"
			                    "https://tntcat.iiasa.ac.at/SspDb/dsd?Action=htmlpage&page=30"//needs username-password"
			, Source          = "select countries and IIASA-WiC Population output options Microsoft Excel iamc_db_countries_IIASA_WIC_population.xlsx"
			, StorageReadonly = "True"
			, SyncMode        = "None"
			, DialogType      = "Map"
			{
				unit<uint32> All
				{
					attribute<string>         Region;//ISO3
					attribute<string>         Model;
					attribute<string>         Scenario;
					attribute<string>         ScenarioShort :=left(Scenario,4);
					attribute<string>         Key           := ScenarioShort + "_" + Region;

					attribute<string>         Y2010;
					attribute<string>         Y2020;
					attribute<string>         Y2030;
					attribute<string>         Y2040;
					attribute<string>         Y2050;
					attribute<string>         Y2060;
					attribute<string>         Y2070;
					attribute<string>         Y2080;
					attribute<string>         Y2090;
					attribute<string>         Y2100;

					attribute<float64>        population_2010:=Y2010[float64];
					attribute<float64>        population_2020:=Y2020[float64];
					attribute<float64>        population_2030:=Y2030[float64];
					attribute<float64>        population_2040:=Y2040[float64];
					attribute<float64>        population_2050:=Y2050[float64];
					attribute<float64>        population_2060:=Y2060[float64];
					attribute<float64>        population_2070:=Y2070[float64];
					attribute<float64>        population_2080:=Y2080[float64];
					attribute<float64>        population_2090:=Y2090[float64];
					attribute<float64>        population_2100:=Y2100[float64];
				}
			}


	container SSPs: = for_each_ne(
			/Scenarios/SSP/Name,
			'Scenarios('+quote(string(/Scenarios/SSP/Name))+')'
			);

	template Scenarios 
	{
		//begin case parameters
		parameter<string> SPPscen;
		//end case parameters

		//urbanshare_YYYY not directly used in model (so to run the model not necessary, but it was needed to determine urbanpop_YYYY)
		unit<uint32> M1 := unique(Population/all/Region)
		{
			attribute<string>  Region                  := Values;
			attribute<string>  Name                    := rjoin(Region,Input/administrative/Countries/Country/ISO3,Input/administrative/Countries/Country/Name_cor);
			attribute<string>  Key                     := SPPscen + "_" + string(values);

			//urban_share_Y2015: only for missing urban shares (not in SSP), not present anymore
			//attribute<float64> urban_share_Y2015       := rjoin(values,SSP/UrbanShare/Country/ISO3,/SSP/UrbanShare/Country/UrbanShareCountry);

			attribute<float64> population_to_use_2010  := rjoin(Key,Population/All/Key,Population/All/population_2010);
			attribute<float64> population_to_use_2020  := rjoin(Key,Population/All/Key,Population/All/population_2020);
			attribute<float64> population_to_use_2030  := rjoin(Key,Population/All/Key,Population/All/population_2030);
			attribute<float64> population_to_use_2040  := rjoin(Key,Population/All/Key,Population/All/population_2040);
			attribute<float64> population_to_use_2050  := rjoin(Key,Population/All/Key,Population/All/population_2050);
			attribute<float64> population_to_use_2060  := rjoin(Key,Population/All/Key,Population/All/population_2060);
			attribute<float64> population_to_use_2070  := rjoin(Key,Population/All/Key,Population/All/population_2070);
			attribute<float64> population_to_use_2080  := rjoin(Key,Population/All/Key,Population/All/population_2080);
			attribute<float64> population_to_use_2090  := rjoin(Key,Population/All/Key,Population/All/population_2090);
			attribute<float64> population_to_use_2100  := rjoin(Key,Population/All/Key,Population/All/population_2100);

			attribute<float64> urban_share_2010    := rjoin(Key,UrbanShare/All/Key,UrbanShare/All/urbanshare_2010);
			attribute<float64> urban_share_2020    := rjoin(Key,UrbanShare/All/Key,UrbanShare/All/urbanshare_2020);
			attribute<float64> urban_share_2030    := rjoin(Key,UrbanShare/All/Key,UrbanShare/All/urbanshare_2030);
			attribute<float64> urban_share_2040    := rjoin(Key,UrbanShare/All/Key,UrbanShare/All/urbanshare_2040);
			attribute<float64> urban_share_2050    := rjoin(Key,UrbanShare/All/Key,UrbanShare/All/urbanshare_2050);
			attribute<float64> urban_share_2060    := rjoin(Key,UrbanShare/All/Key,UrbanShare/All/urbanshare_2060);
			attribute<float64> urban_share_2070    := rjoin(Key,UrbanShare/All/Key,UrbanShare/All/urbanshare_2070);
			attribute<float64> urban_share_2080    := rjoin(Key,UrbanShare/All/Key,UrbanShare/All/urbanshare_2080);
			attribute<float64> urban_share_2090    := rjoin(Key,UrbanShare/All/Key,UrbanShare/All/urbanshare_2090);
			attribute<float64> urban_share_2100    := rjoin(Key,UrbanShare/All/Key,UrbanShare/All/urbanshare_2100);

			attribute<float64> urbanpop2010          := population_to_use_2010 * (urban_share_2010 / 100d);
			attribute<float64> urbanpop2020          := population_to_use_2020 * (urban_share_2020 / 100d);
			attribute<float64> urbanpop2030          := population_to_use_2030 * (urban_share_2030 / 100d);
			attribute<float64> urbanpop2040          := population_to_use_2040 * (urban_share_2040 / 100d);
			attribute<float64> urbanpop2050          := population_to_use_2050 * (urban_share_2050 / 100d);
			attribute<float64> urbanpop2060          := population_to_use_2060 * (urban_share_2060 / 100d);
			attribute<float64> urbanpop2070          := population_to_use_2070 * (urban_share_2070 / 100d);
			attribute<float64> urbanpop2080          := population_to_use_2080 * (urban_share_2080 / 100d);
			attribute<float64> urbanpop2090          := population_to_use_2090 * (urban_share_2090 / 100d);
			attribute<float64> urbanpop2100          := population_to_use_2100 * (urban_share_2100 / 100d);

			attribute<float64> urbangrowthrate2020   := urbanpop2020 / urbanpop2010;
			attribute<float64> urbangrowthrate2030   := urbanpop2030 / urbanpop2020;
			attribute<float64> urbangrowthrate2040   := urbanpop2040 / urbanpop2030;
			attribute<float64> urbangrowthrate2050   := urbanpop2050 / urbanpop2040;
			attribute<float64> urbangrowthrate2060   := urbanpop2060 / urbanpop2050;
			attribute<float64> urbangrowthrate2070   := urbanpop2070 / urbanpop2060;
			attribute<float64> urbangrowthrate2080   := urbanpop2080 / urbanpop2070;
			attribute<float64> urbangrowthrate2090   := urbanpop2090 / urbanpop2080;
			attribute<float64> urbangrowthrate2100   := urbanpop2100 / urbanpop2090;
		}


		unit<uint32> variable_region_M1 := SubItem_PropValues(M1,'name');
		container export_csv_M1 := Report/WriteTable32ToCSV(M1 , AsList(variable_region_M1/name, ';'), '%LocalDataProjDir%/data/M1/' + SPPscen + '_POPULATION_2010_2100.csv');


		unit<uint32> M3 := M1
		{
			attribute<string>  Region                  := M1/Region;
			attribute<string>  Name                    := M1/Name;
			attribute<string>  Key                     := SPPscen + "_" + string(M1/values);

			attribute<float64> population_to_use_2010  := M1/population_to_use_2010;
			attribute<float64> population_to_use_2020  := M1/population_to_use_2020;
			attribute<float64> population_to_use_2030  := M1/population_to_use_2030;
			attribute<float64> population_to_use_2040  := M1/population_to_use_2040;
			attribute<float64> population_to_use_2050  := M1/population_to_use_2050;
			attribute<float64> population_to_use_2060  := M1/population_to_use_2060;
			attribute<float64> population_to_use_2070  := M1/population_to_use_2070;
			attribute<float64> population_to_use_2080  := M1/population_to_use_2080;
			attribute<float64> population_to_use_2090  := M1/population_to_use_2090;
			attribute<float64> population_to_use_2100  := M1/population_to_use_2100;

			attribute<float64> urbanpop2010          := (rjoin(Region,  /Input/administrative/Countries/Country/ISO3, /Input/Population/M3/UrbanPopulationCountry2010[float64]))/1000000d;
			attribute<float64> urbanpop2020          := M1/urbangrowthrate2020 * urbanpop2010;
			attribute<float64> urbanpop2030          := M1/urbangrowthrate2030 * urbanpop2020;
			attribute<float64> urbanpop2040          := M1/urbangrowthrate2040 * urbanpop2030;
			attribute<float64> urbanpop2050          := M1/urbangrowthrate2050 * urbanpop2040;
			attribute<float64> urbanpop2060          := M1/urbangrowthrate2060 * urbanpop2050;
			attribute<float64> urbanpop2070          := M1/urbangrowthrate2070 * urbanpop2060;
			attribute<float64> urbanpop2080          := M1/urbangrowthrate2080 * urbanpop2070;
			attribute<float64> urbanpop2090          := M1/urbangrowthrate2090 * urbanpop2080;
			attribute<float64> urbanpop2100          := M1/urbangrowthrate2100 * urbanpop2090;
		}

		unit<uint32> variable_region_M3 := SubItem_PropValues(M3,'name');
		container export_csv_M3 := Report/WriteTable32ToCSV(M3 , AsList(variable_region_M3/name, ';'), '%LocalDataProjDir%/data/M3/' + SPPscen + '_POPULATION_2010_2100.csv');
	}
}