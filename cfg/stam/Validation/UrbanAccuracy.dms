////////////////////////////////////////////////////////////////////////////////////////////
//            (C) Configuration Towards an Urban Preview - 2UP september 2018             //
//         Netherlands Environmental Assessment Agency http://www.pbl.nl/en/contact       //
//  This work is licensed under a Creative Commons Attribution 4.0 International License  //
//              CC BY-SA 4.0 https://creativecommons.org/licenses/by-sa/4.0/              //
////////////////////////////////////////////////////////////////////////////////////////////

// Author:   Maarten Hilferink, Bas van Bemmel
// Function:

container UrbanAccuracy
{
	parameter<string> prefix :='UrbanCombine\/urbanization_model_valuation_examples\/JRC_1990_2014_M2015\/';

	container country
	{
		unit<uint8> country_uq := UrbanCombine/urbanization_model_valuation_examples/JRC_1990_2014_M2015/P
		{
			attribute<uint8>  id     :=Input/administrative/Countries/Country/ID;
			attribute<string> name   :=Input/administrative/Countries/Country/Name_cor;
			attribute<string> ISO3   :=Input/administrative/Countries/Country/ISO3;
			attribute<uint32> InModel:=Input/administrative/Countries/Country/InModel;
			attribute<int32>  eiland :=Input/administrative/Countries/Country/is_eiland;
			attribute<string> con    :=Continent;
	
			attribute<Float64> nr_Cells:== prefix + 'nr_Cells';
	
			attribute<uint32> _000_nr_RemainingRural:== prefix + 'nr_RemainingRural';
			attribute<uint32> _001_nr_BadPredictedUrbanisation:== prefix + 'nr_BadPredictedUrbanisation';
			attribute<uint32> _010_nr_UrbanisationNotPredicted:== prefix + 'nr_UrbanisationNotPredicted';
			attribute<uint32> _011_nr_GoodPredicedUrbanisation:== prefix + 'nr_GoodPredicedUrbanisation';
			attribute<uint32> _100_nr_GoodPredictedAbandonment:== prefix + 'nr_GoodPredictedAbandonment';
			attribute<uint32> _101_nr_NonPredicedAbandonment:== prefix + 'nr_NonPredicedAbandonment';
			attribute<uint32> _110_nr_BadPredictedAbandonment:== prefix + 'nr_BadPredictedAbandonment';
			attribute<uint32> _111_nr_RemainingUrban:== prefix + 'nr_RemainingUrban';
	
			attribute<Float64> _00_nr_RuralRural:== prefix + 'nr_RuralRural';
			attribute<Float64> _01_nr_RuralUrban:== prefix + 'nr_RuralUrban';
			attribute<Float64> _10_nr_UrbanRural:== prefix + 'nr_UrbanRural';
			attribute<Float64> _11_UrbanUrban:== prefix + 'nr_UrbanUrban';
	
			attribute<Float64> _1990rur:== prefix + 'nr_PastRural';
			attribute<Float64> _1990urb:== prefix + 'nr_PastUrban';
			attribute<Float64> _2014rur:== prefix + 'nr_CurrRural';
			attribute<Float64> _2014urb:== prefix + 'nr_CurrUrban';
	
			attribute<Float64> prc_PastRural:== prefix + 'prc_PastRural';
			attribute<Float64> prc_PastUrban:== prefix + 'prc_PastUrban';
			attribute<Float64> prc_CurrRural:== prefix + 'prc_CurrRural';
			attribute<Float64> prc_CurrUrban:== prefix + 'prc_CurrUrban';
			attribute<Float64> prc_DifCurrPastRural:== prefix + 'prc_DifCurrPastRural';
			attribute<Float64> prc_DifCurrPastUrban:== prefix + 'prc_DifCurrPastUrban';
	
			attribute<Float64> WM_org_Entropy:== prefix + 'withoutModel/org_Entropy';
			attribute<Float64> WM_org_Entropy_given_past:== prefix + 'withoutModel/org_Entropy_given_past';
			attribute<Float64> WM_information_value_past:== prefix + 'withoutModel/information_value_past';
	
			attribute<Float64> PastRural_nr_PredRural:== prefix + 'PastRural/nr_PredRural';
			attribute<Float64> PastRural_nr_PredUrban:== prefix + 'PastRural/nr_PredUrban';
	
			attribute<Float64> PastRural_org_Entropy:== prefix + 'PastRural/org_Entropy';
			attribute<Float64> PastRural_org_Entropy_given_modelresult:== prefix + 'PastRural/org_Entropy_given_modelresult';
			attribute<Float64> PastRural_information_value_past:== prefix + 'PastRural/information_value_past';
	
			attribute<Float64> PastUrban_nr_PredRural:== prefix + 'PastUrban/nr_PredRural';
			attribute<Float64> PastUrban_nr_PredUrban:== prefix + 'PastUrban/nr_PredUrban';
	
			attribute<Float64> PastUrban_org_Entropy:== prefix + 'PastUrban/org_Entropy';
			attribute<Float64> PastUrban_org_Entropy_given_modelresult:== prefix + 'PastUrban/org_Entropy_given_modelresult';
			attribute<Float64> PastUrban_information_value_past:== prefix + 'PastUrban/information_value_past';
	
			attribute<Float64> org_Entropy:== prefix + 'org_Entropy';
			attribute<Float64> org_Entropy_given_past:== prefix + 'org_Entropy_given_past';
			attribute<Float64> org_Entropy_given_modelresult:== prefix + 'org_Entropy_given_modelresult';
	
			attribute<Float64> past:== prefix + 'information_value/past';
			attribute<Float64> model:== prefix + 'information_value/model';
			attribute<Float64> indicator1:== prefix + 'information_value/indicator1';
			attribute<Float64> indicator2:== prefix + 'information_value/indicator2';

			attribute<uint32> counter_producers_accuracy     :=_011_nr_GoodPredicedUrbanisation + _111_nr_RemainingUrban;
			attribute<uint32> denominator_producers_accuracy :=_010_nr_UrbanisationNotPredicted + _011_nr_GoodPredicedUrbanisation + _110_nr_BadPredictedAbandonment + _111_nr_RemainingUrban;

			attribute<uint32> counter_users_accuracy     :=_011_nr_GoodPredicedUrbanisation + _111_nr_RemainingUrban;//same as counter_producers_accuracy
			attribute<uint32> denominator_users_accuracy := _001_nr_BadPredictedUrbanisation + _011_nr_GoodPredicedUrbanisation + _101_nr_NonPredicedAbandonment + _111_nr_RemainingUrban;			

			attribute<uint32> counter_total_unchanged      :=_000_nr_RemainingRural + _111_nr_RemainingUrban;
			attribute<uint32> denominator_total_unchanged  :=_000_nr_RemainingRural + denominator_good_predicted_of_changed + _111_nr_RemainingUrban;

			attribute<uint32> counter_good_predicted_of_changed     :=_011_nr_GoodPredicedUrbanisation + _100_nr_GoodPredictedAbandonment;
			attribute<uint32> denominator_good_predicted_of_changed :=_001_nr_BadPredictedUrbanisation + 
																	Country/country_uq/_010_nr_UrbanisationNotPredicted + 
																	Country/country_uq/_011_nr_GoodPredicedUrbanisation + 
																	Country/country_uq/_100_nr_GoodPredictedAbandonment + 
																	Country/country_uq/_101_nr_NonPredicedAbandonment + 
																	Country/country_uq/_110_nr_BadPredictedAbandonment;


			attribute<uint32> counter_correct_landuse      :=_011_nr_GoodPredicedUrbanisation + _111_nr_RemainingUrban;
			attribute<uint32> denominator_correct_landuse  := denominator_good_predicted_of_changed + _111_nr_RemainingUrban;
	
			attribute<Float32> prc_producers_accuracy        := (counter_producers_accuracy[Float32] / denominator_producers_accuracy[Float32]) * 100f;
			attribute<Float32> prc_users_accuracy            := (counter_users_accuracy[Float32] / denominator_users_accuracy[Float32]) * 100f;
			attribute<Float32> prc_total_unchanged           := (counter_total_unchanged[Float32] / denominator_total_unchanged[Float32]) * 100f;
			attribute<Float32> prc_good_predicted_of_changed := (counter_good_predicted_of_changed[Float32] / denominator_good_predicted_of_changed[Float32]) * 100f;
			attribute<Float32> prc_correct_landuse           := (counter_correct_landuse[Float32] / denominator_correct_landuse[Float32]) * 100f;
	
			//attribute<float32> rank_prc_total_unchanged_rev           := reverse(prc_total_unchanged));//mantis http://mantis.objectvision.nl/view.php?id=1461
	
			attribute<uint8> rank_producers_accuracy            := rlookup(id,index(prc_producers_accuracy * -1f));
			attribute<uint8> rank_users_accuracy                := rlookup(id,index(prc_users_accuracy * -1f));
			attribute<uint8> rank_prc_total_unchanged           := rlookup(id,index(prc_total_unchanged * -1f));
			attribute<uint8> rank_prc_good_predicted_of_changed := rlookup(id,index(prc_good_predicted_of_changed * -1f));
			attribute<uint8> rank_correct_landuse               := rlookup(id,index(prc_correct_landuse * -1f));
		}

		unit<uint32> variable_country := SubItem_PropValues(country_uq,'Name');
		container export_csv := Report/WriteTable8ToCSV(country_uq , AsList(variable_country/Name, ';'), '%LocalDataProjDir%/results/'+Past/GridName+'/validation/country.csv');
	}

	container continent 
	{
		unit<uint8> cont_uq := Input/administrative/Continent/cont_uq
		{
			attribute<string>  Name                               := Input/administrative/Continent/cont_uq/Label;

			attribute<float32> counter_prc_producers_accuracy     := sum((Country/country_uq/counter_producers_accuracy)[float32],      Input/administrative/Countries/Country/Continent_id);
			attribute<float32> denominator_prc_producers_accuracy := sum((Country/country_uq/denominator_producers_accuracy)[float32], Input/administrative/Countries/Country/Continent_id);
			attribute<float32> mean_prc_producers_accuracy        := (counter_prc_producers_accuracy / denominator_prc_producers_accuracy) *100f;

			attribute<float32> counter_prc_users_accuracy     := sum((Country/country_uq/counter_users_accuracy)[float32],      Input/administrative/Countries/Country/Continent_id);
			attribute<float32> denominator_prc_users_accuracy := sum((Country/country_uq/denominator_users_accuracy)[float32], Input/administrative/Countries/Country/Continent_id);
			attribute<float32> mean_prc_users_accuracy        := (counter_prc_users_accuracy / denominator_prc_users_accuracy) *100f;

			attribute<float32> counter_prc_total_unchanged     := sum((Country/country_uq/counter_total_unchanged)[float32],      Input/administrative/Countries/Country/Continent_id);
			attribute<float32> denominator_prc_total_unchanged := sum((Country/country_uq/denominator_total_unchanged)[float32], Input/administrative/Countries/Country/Continent_id);
			attribute<float32> mean_prc_total_unchanged        := (counter_prc_total_unchanged / denominator_prc_total_unchanged) *100f;

			attribute<float32> counter_prc_good_predicted_of_changed     := sum((Country/country_uq/counter_good_predicted_of_changed)[float32],      Input/administrative/Countries/Country/Continent_id);
			attribute<float32> denominator_prc_good_predicted_of_changed := sum((Country/country_uq/denominator_good_predicted_of_changed)[float32], Input/administrative/Countries/Country/Continent_id);
			attribute<float32> mean_prc_good_predicted_of_changed        := (counter_prc_good_predicted_of_changed / denominator_prc_good_predicted_of_changed) *100f;

			attribute<float32> counter_prc_correct_landuse     := sum((Country/country_uq/counter_correct_landuse)[float32],      Input/administrative/Countries/Country/Continent_id);
			attribute<float32> denominator_prc_correct_landuse := sum((Country/country_uq/denominator_correct_landuse)[float32], Input/administrative/Countries/Country/Continent_id);
			attribute<float32> mean_prc_correct_landuse        := (counter_prc_correct_landuse / denominator_prc_correct_landuse) *100f;
		}

		unit<uint8> cont_uq_export :=cont_uq
		{
			attribute<string>  Name                               := cont_uq/Name;
			attribute<float32> mean_prc_producers_accuracy        := cont_uq/mean_prc_producers_accuracy;
			attribute<float32> mean_prc_users_accuracy            := cont_uq/mean_prc_users_accuracy;
			attribute<float32> mean_prc_total_unchanged           := cont_uq/mean_prc_total_unchanged;
			attribute<float32> mean_prc_good_predicted_of_changed := cont_uq/mean_prc_good_predicted_of_changed;
			attribute<float32> mean_prc_correct_landuse           := cont_uq/mean_prc_correct_landuse;
		}
		
		unit<uint32> variable_cont_uq_export := SubItem_PropValues(cont_uq_export,'Name');
		container export_csv := Report/WriteTable8ToCSV(cont_uq_export , AsList(variable_cont_uq_export/Name, ';'), '%LocalDataProjDir%/results/'+Past/GridName+'/validation/continent.csv');
	}
	
	container world 
	{
		unit<uint8> world_uq := Input/administrative/World/world_uq
		{
			attribute<string>  Name                               := Input/administrative/World/world_uq/Label;

			attribute<float32> counter_prc_producers_accuracy     := sum((Country/country_uq/counter_producers_accuracy)[float32],      Input/administrative/Countries/Country/World_id);
			attribute<float32> denominator_prc_producers_accuracy := sum((Country/country_uq/denominator_producers_accuracy)[float32], Input/administrative/Countries/Country/World_id);
			attribute<float32> mean_prc_producers_accuracy        := (counter_prc_producers_accuracy / denominator_prc_producers_accuracy) *100f;

			attribute<float32> counter_prc_users_accuracy     := sum((Country/country_uq/counter_users_accuracy)[float32],      Input/administrative/Countries/Country/World_id);
			attribute<float32> denominator_prc_users_accuracy := sum((Country/country_uq/denominator_users_accuracy)[float32], Input/administrative/Countries/Country/World_id);
			attribute<float32> mean_prc_users_accuracy        := (counter_prc_users_accuracy / denominator_prc_users_accuracy) *100f;

			attribute<float32> counter_prc_total_unchanged     := sum((Country/country_uq/counter_total_unchanged)[float32],      Input/administrative/Countries/Country/World_id);
			attribute<float32> denominator_prc_total_unchanged := sum((Country/country_uq/denominator_total_unchanged)[float32], Input/administrative/Countries/Country/World_id);
			attribute<float32> mean_prc_total_unchanged        := (counter_prc_total_unchanged / denominator_prc_total_unchanged) *100f;

			attribute<float32> counter_prc_good_predicted_of_changed     := sum((Country/country_uq/counter_good_predicted_of_changed)[float32],      Input/administrative/Countries/Country/World_id);
			attribute<float32> denominator_prc_good_predicted_of_changed := sum((Country/country_uq/denominator_good_predicted_of_changed)[float32], Input/administrative/Countries/Country/World_id);
			attribute<float32> mean_prc_good_predicted_of_changed        := (counter_prc_good_predicted_of_changed / denominator_prc_good_predicted_of_changed) *100f;

			attribute<float32> counter_prc_correct_landuse     := sum((Country/country_uq/counter_correct_landuse)[float32],      Input/administrative/Countries/Country/World_id);
			attribute<float32> denominator_prc_correct_landuse := sum((Country/country_uq/denominator_correct_landuse)[float32], Input/administrative/Countries/Country/World_id);
			attribute<float32> mean_prc_correct_landuse        := (counter_prc_correct_landuse / denominator_prc_correct_landuse) *100f;
		}
		
		unit<uint8> world_uq_export := world_uq
		{
			attribute<string>  Name                               := world_uq/Name;
			attribute<float32> mean_prc_producers_accuracy        := world_uq/mean_prc_producers_accuracy;
			attribute<float32> mean_prc_users_accuracy            := world_uq/mean_prc_users_accuracy;
			attribute<float32> mean_prc_total_unchanged           := world_uq/mean_prc_total_unchanged;
			attribute<float32> mean_prc_good_predicted_of_changed := world_uq/mean_prc_good_predicted_of_changed;
			attribute<float32> mean_prc_correct_landuse           := world_uq/mean_prc_correct_landuse;
		}
		
		unit<uint32> variable_world_uq_export := SubItem_PropValues(world_uq_export,'Name');
		container export_csv := Report/WriteTable8ToCSV(world_uq_export , AsList(variable_world_uq_export/Name, ';'), '%LocalDataProjDir%/results/'+Past/GridName+'/validation/world.csv');
	}
}